2025-03-31 16:06:10,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:06:10,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:06:10,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:06:10,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:09:00,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:09:00,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:09:00,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:09:00,543:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:22:44,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:22:44,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:22:44,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:22:44,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:24:28,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:24:28,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:24:28,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:24:28,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:30:25,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:30:25,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:30:25,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:30:25,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:52:25,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:52:25,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:52:25,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 16:52:25,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:20:07,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:20:07,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:20:07,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:20:07,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:25:58,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:25:58,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:25:58,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:25:58,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:25:59,511:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\IPython\core\interactiveshell.py:3587: UserWarning:

To exit: use 'exit', 'quit', or Ctrl-D.


2025-03-31 17:33:56,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:33:56,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:33:56,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:33:56,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:34:49,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:34:49,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:34:49,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:34:49,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:41:36,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:41:36,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:41:36,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 17:41:36,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:02:13,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:02:13,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:02:13,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:02:13,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:03:44,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:03:44,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:03:44,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:03:44,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:23,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:23,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:23,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:23,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:49,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:49,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:49,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:04:49,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:08:36,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:08:36,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:08:36,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:08:36,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:21:16,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:21:16,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:21:16,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:21:16,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:26:21,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:26:21,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:26:21,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:26:21,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:32:16,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:32:16,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:32:16,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:32:16,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:35:24,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:35:24,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:35:24,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:35:24,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:36:06,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:36:06,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:36:06,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:36:06,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 18:36:06,688:INFO:PyCaret ClassificationExperiment
2025-03-31 18:36:06,688:INFO:Logging name: clf-default-name
2025-03-31 18:36:06,688:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-31 18:36:06,688:INFO:version 3.3.2
2025-03-31 18:36:06,688:INFO:Initializing setup()
2025-03-31 18:36:06,688:INFO:self.USI: fa6d
2025-03-31 18:36:06,688:INFO:self._variable_keys: {'USI', 'fold_groups_param', 'data', 'exp_id', 'target_param', '_ml_usecase', 'X_train', 'is_multiclass', 'exp_name_log', 'n_jobs_param', 'y_test', 'memory', 'pipeline', 'X_test', 'X', 'seed', 'y', 'html_param', 'gpu_n_jobs_param', 'log_plots_param', 'logging_param', 'fix_imbalance', 'y_train', 'fold_generator', '_available_plots', 'idx', 'fold_shuffle_param', 'gpu_param'}
2025-03-31 18:36:06,688:INFO:Checking environment
2025-03-31 18:36:06,688:INFO:python_version: 3.10.16
2025-03-31 18:36:06,688:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-03-31 18:36:06,688:INFO:machine: AMD64
2025-03-31 18:36:06,707:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-31 18:36:06,710:INFO:Memory: svmem(total=17009004544, available=6563184640, percent=61.4, used=10445819904, free=6563184640)
2025-03-31 18:36:06,710:INFO:Physical Core: 6
2025-03-31 18:36:06,710:INFO:Logical Core: 12
2025-03-31 18:36:06,710:INFO:Checking libraries
2025-03-31 18:36:06,711:INFO:System:
2025-03-31 18:36:06,711:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-03-31 18:36:06,711:INFO:executable: c:\Users\Thayse\.conda\envs\mlpipeline\python.exe
2025-03-31 18:36:06,711:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-31 18:36:06,711:INFO:PyCaret required dependencies:
2025-03-31 18:36:06,776:INFO:                 pip: 25.0
2025-03-31 18:36:06,776:INFO:          setuptools: 75.8.0
2025-03-31 18:36:06,776:INFO:             pycaret: 3.3.2
2025-03-31 18:36:06,776:INFO:             IPython: 8.34.0
2025-03-31 18:36:06,776:INFO:          ipywidgets: 8.1.5
2025-03-31 18:36:06,776:INFO:                tqdm: 4.67.1
2025-03-31 18:36:06,776:INFO:               numpy: 1.26.4
2025-03-31 18:36:06,776:INFO:              pandas: 2.1.4
2025-03-31 18:36:06,776:INFO:              jinja2: 3.1.6
2025-03-31 18:36:06,776:INFO:               scipy: 1.11.4
2025-03-31 18:36:06,776:INFO:              joblib: 1.3.2
2025-03-31 18:36:06,776:INFO:             sklearn: 1.4.2
2025-03-31 18:36:06,776:INFO:                pyod: 2.0.4
2025-03-31 18:36:06,776:INFO:            imblearn: 0.13.0
2025-03-31 18:36:06,776:INFO:   category_encoders: 2.7.0
2025-03-31 18:36:06,776:INFO:            lightgbm: 4.6.0
2025-03-31 18:36:06,776:INFO:               numba: 0.61.0
2025-03-31 18:36:06,776:INFO:            requests: 2.32.3
2025-03-31 18:36:06,777:INFO:          matplotlib: 3.7.5
2025-03-31 18:36:06,777:INFO:          scikitplot: 0.3.7
2025-03-31 18:36:06,777:INFO:         yellowbrick: 1.5
2025-03-31 18:36:06,777:INFO:              plotly: 5.24.1
2025-03-31 18:36:06,777:INFO:    plotly-resampler: Not installed
2025-03-31 18:36:06,777:INFO:             kaleido: 0.2.1
2025-03-31 18:36:06,777:INFO:           schemdraw: 0.15
2025-03-31 18:36:06,777:INFO:         statsmodels: 0.14.4
2025-03-31 18:36:06,777:INFO:              sktime: 0.26.0
2025-03-31 18:36:06,777:INFO:               tbats: 1.1.3
2025-03-31 18:36:06,777:INFO:            pmdarima: 2.0.4
2025-03-31 18:36:06,777:INFO:              psutil: 7.0.0
2025-03-31 18:36:06,777:INFO:          markupsafe: 3.0.2
2025-03-31 18:36:06,777:INFO:             pickle5: Not installed
2025-03-31 18:36:06,777:INFO:         cloudpickle: 3.1.1
2025-03-31 18:36:06,777:INFO:         deprecation: 2.1.0
2025-03-31 18:36:06,777:INFO:              xxhash: 3.5.0
2025-03-31 18:36:06,777:INFO:           wurlitzer: Not installed
2025-03-31 18:36:06,777:INFO:PyCaret optional dependencies:
2025-03-31 18:36:07,273:INFO:                shap: Not installed
2025-03-31 18:36:07,273:INFO:           interpret: Not installed
2025-03-31 18:36:07,273:INFO:                umap: Not installed
2025-03-31 18:36:07,273:INFO:     ydata_profiling: 4.16.1
2025-03-31 18:36:07,273:INFO:  explainerdashboard: Not installed
2025-03-31 18:36:07,273:INFO:             autoviz: Not installed
2025-03-31 18:36:07,273:INFO:           fairlearn: Not installed
2025-03-31 18:36:07,273:INFO:          deepchecks: Not installed
2025-03-31 18:36:07,273:INFO:             xgboost: Not installed
2025-03-31 18:36:07,273:INFO:            catboost: Not installed
2025-03-31 18:36:07,273:INFO:              kmodes: Not installed
2025-03-31 18:36:07,273:INFO:             mlxtend: Not installed
2025-03-31 18:36:07,273:INFO:       statsforecast: Not installed
2025-03-31 18:36:07,273:INFO:        tune_sklearn: Not installed
2025-03-31 18:36:07,273:INFO:                 ray: Not installed
2025-03-31 18:36:07,273:INFO:            hyperopt: Not installed
2025-03-31 18:36:07,273:INFO:              optuna: Not installed
2025-03-31 18:36:07,273:INFO:               skopt: Not installed
2025-03-31 18:36:07,273:INFO:              mlflow: Not installed
2025-03-31 18:36:07,273:INFO:              gradio: Not installed
2025-03-31 18:36:07,273:INFO:             fastapi: 0.115.12
2025-03-31 18:36:07,273:INFO:             uvicorn: 0.34.0
2025-03-31 18:36:07,273:INFO:              m2cgen: Not installed
2025-03-31 18:36:07,273:INFO:           evidently: Not installed
2025-03-31 18:36:07,273:INFO:               fugue: Not installed
2025-03-31 18:36:07,273:INFO:           streamlit: Not installed
2025-03-31 18:36:07,273:INFO:             prophet: Not installed
2025-03-31 18:36:07,273:INFO:None
2025-03-31 18:36:07,273:INFO:Set up data.
2025-03-31 18:36:07,277:INFO:Set up folding strategy.
2025-03-31 18:36:07,277:INFO:Set up train/test split.
2025-03-31 18:36:07,279:INFO:Set up index.
2025-03-31 18:36:07,279:INFO:Assigning column types.
2025-03-31 18:36:07,283:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-31 18:36:07,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 18:36:07,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-31 18:36:07,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,385:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 18:36:07,385:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-31 18:36:07,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,401:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-31 18:36:07,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-31 18:36:07,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-31 18:36:07,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,544:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-31 18:36:07,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,675:INFO:Preparing preprocessing pipeline...
2025-03-31 18:36:07,675:INFO:Set up simple imputation.
2025-03-31 18:36:07,675:INFO:Set up column name cleaning.
2025-03-31 18:36:07,691:INFO:Finished creating preprocessing pipeline.
2025-03-31 18:36:07,691:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Thayse\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Med_1_mL', 'Med_2_mL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-31 18:36:07,691:INFO:Creating final display dataframe.
2025-03-31 18:36:07,754:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     Virus Present
2                   Target type            Binary
3           Original data shape          (400, 3)
4        Transformed data shape          (400, 3)
5   Transformed train set shape          (280, 3)
6    Transformed test set shape          (120, 3)
7              Numeric features                 2
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              fa6d
2025-03-31 18:36:07,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 18:36:07,893:INFO:setup() successfully completed in 1.21s...............
2025-03-31 18:36:07,893:INFO:Initializing compare_models()
2025-03-31 18:36:07,893:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-31 18:36:07,893:INFO:Checking exceptions
2025-03-31 18:36:07,893:INFO:Preparing display monitor
2025-03-31 18:36:07,893:INFO:Initializing Logistic Regression
2025-03-31 18:36:07,893:INFO:Total runtime is 0.0 minutes
2025-03-31 18:36:07,893:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:07,893:INFO:Initializing create_model()
2025-03-31 18:36:07,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:07,893:INFO:Checking exceptions
2025-03-31 18:36:07,893:INFO:Importing libraries
2025-03-31 18:36:07,893:INFO:Copying training dataset
2025-03-31 18:36:07,893:INFO:Defining folds
2025-03-31 18:36:07,893:INFO:Declaring metric variables
2025-03-31 18:36:07,893:INFO:Importing untrained model
2025-03-31 18:36:07,893:INFO:Logistic Regression Imported successfully
2025-03-31 18:36:07,893:INFO:Starting cross validation
2025-03-31 18:36:07,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:14,045:INFO:Calculating mean and std
2025-03-31 18:36:14,047:INFO:Creating metrics dataframe
2025-03-31 18:36:14,053:INFO:Uploading results into container
2025-03-31 18:36:14,055:INFO:Uploading model into container now
2025-03-31 18:36:14,057:INFO:_master_model_container: 1
2025-03-31 18:36:14,057:INFO:_display_container: 2
2025-03-31 18:36:14,057:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-31 18:36:14,057:INFO:create_model() successfully completed......................................
2025-03-31 18:36:14,228:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:14,228:INFO:Creating metrics dataframe
2025-03-31 18:36:14,228:INFO:Initializing K Neighbors Classifier
2025-03-31 18:36:14,228:INFO:Total runtime is 0.10558737913767496 minutes
2025-03-31 18:36:14,228:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:14,228:INFO:Initializing create_model()
2025-03-31 18:36:14,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:14,228:INFO:Checking exceptions
2025-03-31 18:36:14,228:INFO:Importing libraries
2025-03-31 18:36:14,228:INFO:Copying training dataset
2025-03-31 18:36:14,228:INFO:Defining folds
2025-03-31 18:36:14,228:INFO:Declaring metric variables
2025-03-31 18:36:14,228:INFO:Importing untrained model
2025-03-31 18:36:14,228:INFO:K Neighbors Classifier Imported successfully
2025-03-31 18:36:14,228:INFO:Starting cross validation
2025-03-31 18:36:14,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:16,901:INFO:Calculating mean and std
2025-03-31 18:36:16,901:INFO:Creating metrics dataframe
2025-03-31 18:36:16,901:INFO:Uploading results into container
2025-03-31 18:36:16,901:INFO:Uploading model into container now
2025-03-31 18:36:16,901:INFO:_master_model_container: 2
2025-03-31 18:36:16,901:INFO:_display_container: 2
2025-03-31 18:36:16,901:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-31 18:36:16,901:INFO:create_model() successfully completed......................................
2025-03-31 18:36:17,019:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:17,019:INFO:Creating metrics dataframe
2025-03-31 18:36:17,019:INFO:Initializing Naive Bayes
2025-03-31 18:36:17,019:INFO:Total runtime is 0.15209821462631226 minutes
2025-03-31 18:36:17,019:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:17,019:INFO:Initializing create_model()
2025-03-31 18:36:17,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:17,019:INFO:Checking exceptions
2025-03-31 18:36:17,019:INFO:Importing libraries
2025-03-31 18:36:17,019:INFO:Copying training dataset
2025-03-31 18:36:17,019:INFO:Defining folds
2025-03-31 18:36:17,019:INFO:Declaring metric variables
2025-03-31 18:36:17,019:INFO:Importing untrained model
2025-03-31 18:36:17,019:INFO:Naive Bayes Imported successfully
2025-03-31 18:36:17,019:INFO:Starting cross validation
2025-03-31 18:36:17,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:17,120:INFO:Calculating mean and std
2025-03-31 18:36:17,120:INFO:Creating metrics dataframe
2025-03-31 18:36:17,120:INFO:Uploading results into container
2025-03-31 18:36:17,120:INFO:Uploading model into container now
2025-03-31 18:36:17,120:INFO:_master_model_container: 3
2025-03-31 18:36:17,120:INFO:_display_container: 2
2025-03-31 18:36:17,120:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-31 18:36:17,120:INFO:create_model() successfully completed......................................
2025-03-31 18:36:17,198:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:17,198:INFO:Creating metrics dataframe
2025-03-31 18:36:17,213:INFO:Initializing Decision Tree Classifier
2025-03-31 18:36:17,213:INFO:Total runtime is 0.1553276817003886 minutes
2025-03-31 18:36:17,213:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:17,213:INFO:Initializing create_model()
2025-03-31 18:36:17,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:17,213:INFO:Checking exceptions
2025-03-31 18:36:17,213:INFO:Importing libraries
2025-03-31 18:36:17,213:INFO:Copying training dataset
2025-03-31 18:36:17,213:INFO:Defining folds
2025-03-31 18:36:17,213:INFO:Declaring metric variables
2025-03-31 18:36:17,213:INFO:Importing untrained model
2025-03-31 18:36:17,213:INFO:Decision Tree Classifier Imported successfully
2025-03-31 18:36:17,213:INFO:Starting cross validation
2025-03-31 18:36:17,213:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:17,307:INFO:Calculating mean and std
2025-03-31 18:36:17,307:INFO:Creating metrics dataframe
2025-03-31 18:36:17,307:INFO:Uploading results into container
2025-03-31 18:36:17,307:INFO:Uploading model into container now
2025-03-31 18:36:17,307:INFO:_master_model_container: 4
2025-03-31 18:36:17,307:INFO:_display_container: 2
2025-03-31 18:36:17,307:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-03-31 18:36:17,307:INFO:create_model() successfully completed......................................
2025-03-31 18:36:17,393:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:17,393:INFO:Creating metrics dataframe
2025-03-31 18:36:17,393:INFO:Initializing SVM - Linear Kernel
2025-03-31 18:36:17,393:INFO:Total runtime is 0.158333690961202 minutes
2025-03-31 18:36:17,393:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:17,393:INFO:Initializing create_model()
2025-03-31 18:36:17,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:17,393:INFO:Checking exceptions
2025-03-31 18:36:17,393:INFO:Importing libraries
2025-03-31 18:36:17,393:INFO:Copying training dataset
2025-03-31 18:36:17,393:INFO:Defining folds
2025-03-31 18:36:17,393:INFO:Declaring metric variables
2025-03-31 18:36:17,393:INFO:Importing untrained model
2025-03-31 18:36:17,393:INFO:SVM - Linear Kernel Imported successfully
2025-03-31 18:36:17,393:INFO:Starting cross validation
2025-03-31 18:36:17,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:17,488:INFO:Calculating mean and std
2025-03-31 18:36:17,488:INFO:Creating metrics dataframe
2025-03-31 18:36:17,488:INFO:Uploading results into container
2025-03-31 18:36:17,488:INFO:Uploading model into container now
2025-03-31 18:36:17,488:INFO:_master_model_container: 5
2025-03-31 18:36:17,488:INFO:_display_container: 2
2025-03-31 18:36:17,488:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-31 18:36:17,488:INFO:create_model() successfully completed......................................
2025-03-31 18:36:17,573:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:17,573:INFO:Creating metrics dataframe
2025-03-31 18:36:17,573:INFO:Initializing Ridge Classifier
2025-03-31 18:36:17,573:INFO:Total runtime is 0.16133409738540652 minutes
2025-03-31 18:36:17,573:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:17,573:INFO:Initializing create_model()
2025-03-31 18:36:17,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:17,573:INFO:Checking exceptions
2025-03-31 18:36:17,573:INFO:Importing libraries
2025-03-31 18:36:17,573:INFO:Copying training dataset
2025-03-31 18:36:17,573:INFO:Defining folds
2025-03-31 18:36:17,573:INFO:Declaring metric variables
2025-03-31 18:36:17,573:INFO:Importing untrained model
2025-03-31 18:36:17,573:INFO:Ridge Classifier Imported successfully
2025-03-31 18:36:17,573:INFO:Starting cross validation
2025-03-31 18:36:17,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:17,684:INFO:Calculating mean and std
2025-03-31 18:36:17,684:INFO:Creating metrics dataframe
2025-03-31 18:36:17,684:INFO:Uploading results into container
2025-03-31 18:36:17,684:INFO:Uploading model into container now
2025-03-31 18:36:17,684:INFO:_master_model_container: 6
2025-03-31 18:36:17,684:INFO:_display_container: 2
2025-03-31 18:36:17,684:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-03-31 18:36:17,684:INFO:create_model() successfully completed......................................
2025-03-31 18:36:17,778:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:17,778:INFO:Creating metrics dataframe
2025-03-31 18:36:17,778:INFO:Initializing Random Forest Classifier
2025-03-31 18:36:17,778:INFO:Total runtime is 0.16475261052449547 minutes
2025-03-31 18:36:17,778:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:17,778:INFO:Initializing create_model()
2025-03-31 18:36:17,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:17,778:INFO:Checking exceptions
2025-03-31 18:36:17,778:INFO:Importing libraries
2025-03-31 18:36:17,778:INFO:Copying training dataset
2025-03-31 18:36:17,778:INFO:Defining folds
2025-03-31 18:36:17,778:INFO:Declaring metric variables
2025-03-31 18:36:17,778:INFO:Importing untrained model
2025-03-31 18:36:17,778:INFO:Random Forest Classifier Imported successfully
2025-03-31 18:36:17,778:INFO:Starting cross validation
2025-03-31 18:36:17,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:18,312:INFO:Calculating mean and std
2025-03-31 18:36:18,312:INFO:Creating metrics dataframe
2025-03-31 18:36:18,312:INFO:Uploading results into container
2025-03-31 18:36:18,312:INFO:Uploading model into container now
2025-03-31 18:36:18,312:INFO:_master_model_container: 7
2025-03-31 18:36:18,312:INFO:_display_container: 2
2025-03-31 18:36:18,312:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-03-31 18:36:18,312:INFO:create_model() successfully completed......................................
2025-03-31 18:36:18,431:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:18,431:INFO:Creating metrics dataframe
2025-03-31 18:36:18,431:INFO:Initializing Quadratic Discriminant Analysis
2025-03-31 18:36:18,431:INFO:Total runtime is 0.17562312682469688 minutes
2025-03-31 18:36:18,431:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:18,431:INFO:Initializing create_model()
2025-03-31 18:36:18,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:18,431:INFO:Checking exceptions
2025-03-31 18:36:18,431:INFO:Importing libraries
2025-03-31 18:36:18,431:INFO:Copying training dataset
2025-03-31 18:36:18,446:INFO:Defining folds
2025-03-31 18:36:18,446:INFO:Declaring metric variables
2025-03-31 18:36:18,446:INFO:Importing untrained model
2025-03-31 18:36:18,446:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-31 18:36:18,446:INFO:Starting cross validation
2025-03-31 18:36:18,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:18,532:INFO:Calculating mean and std
2025-03-31 18:36:18,532:INFO:Creating metrics dataframe
2025-03-31 18:36:18,532:INFO:Uploading results into container
2025-03-31 18:36:18,532:INFO:Uploading model into container now
2025-03-31 18:36:18,532:INFO:_master_model_container: 8
2025-03-31 18:36:18,532:INFO:_display_container: 2
2025-03-31 18:36:18,532:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-31 18:36:18,532:INFO:create_model() successfully completed......................................
2025-03-31 18:36:18,612:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:18,612:INFO:Creating metrics dataframe
2025-03-31 18:36:18,612:INFO:Initializing Ada Boost Classifier
2025-03-31 18:36:18,612:INFO:Total runtime is 0.17864118814468385 minutes
2025-03-31 18:36:18,612:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:18,612:INFO:Initializing create_model()
2025-03-31 18:36:18,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:18,612:INFO:Checking exceptions
2025-03-31 18:36:18,612:INFO:Importing libraries
2025-03-31 18:36:18,612:INFO:Copying training dataset
2025-03-31 18:36:18,628:INFO:Defining folds
2025-03-31 18:36:18,628:INFO:Declaring metric variables
2025-03-31 18:36:18,628:INFO:Importing untrained model
2025-03-31 18:36:18,628:INFO:Ada Boost Classifier Imported successfully
2025-03-31 18:36:18,628:INFO:Starting cross validation
2025-03-31 18:36:18,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,665:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-31 18:36:18,728:INFO:Calculating mean and std
2025-03-31 18:36:18,728:INFO:Creating metrics dataframe
2025-03-31 18:36:18,728:INFO:Uploading results into container
2025-03-31 18:36:18,732:INFO:Uploading model into container now
2025-03-31 18:36:18,732:INFO:_master_model_container: 9
2025-03-31 18:36:18,732:INFO:_display_container: 2
2025-03-31 18:36:18,732:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-03-31 18:36:18,732:INFO:create_model() successfully completed......................................
2025-03-31 18:36:18,814:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:18,814:INFO:Creating metrics dataframe
2025-03-31 18:36:18,814:INFO:Initializing Gradient Boosting Classifier
2025-03-31 18:36:18,814:INFO:Total runtime is 0.1820077697436015 minutes
2025-03-31 18:36:18,814:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:18,814:INFO:Initializing create_model()
2025-03-31 18:36:18,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:18,814:INFO:Checking exceptions
2025-03-31 18:36:18,814:INFO:Importing libraries
2025-03-31 18:36:18,814:INFO:Copying training dataset
2025-03-31 18:36:18,830:INFO:Defining folds
2025-03-31 18:36:18,830:INFO:Declaring metric variables
2025-03-31 18:36:18,830:INFO:Importing untrained model
2025-03-31 18:36:18,830:INFO:Gradient Boosting Classifier Imported successfully
2025-03-31 18:36:18,830:INFO:Starting cross validation
2025-03-31 18:36:18,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:19,041:INFO:Calculating mean and std
2025-03-31 18:36:19,041:INFO:Creating metrics dataframe
2025-03-31 18:36:19,041:INFO:Uploading results into container
2025-03-31 18:36:19,041:INFO:Uploading model into container now
2025-03-31 18:36:19,041:INFO:_master_model_container: 10
2025-03-31 18:36:19,041:INFO:_display_container: 2
2025-03-31 18:36:19,041:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-31 18:36:19,041:INFO:create_model() successfully completed......................................
2025-03-31 18:36:19,143:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:19,143:INFO:Creating metrics dataframe
2025-03-31 18:36:19,143:INFO:Initializing Linear Discriminant Analysis
2025-03-31 18:36:19,143:INFO:Total runtime is 0.18749768733978273 minutes
2025-03-31 18:36:19,143:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:19,143:INFO:Initializing create_model()
2025-03-31 18:36:19,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:19,143:INFO:Checking exceptions
2025-03-31 18:36:19,143:INFO:Importing libraries
2025-03-31 18:36:19,143:INFO:Copying training dataset
2025-03-31 18:36:19,143:INFO:Defining folds
2025-03-31 18:36:19,143:INFO:Declaring metric variables
2025-03-31 18:36:19,159:INFO:Importing untrained model
2025-03-31 18:36:19,159:INFO:Linear Discriminant Analysis Imported successfully
2025-03-31 18:36:19,159:INFO:Starting cross validation
2025-03-31 18:36:19,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:19,244:INFO:Calculating mean and std
2025-03-31 18:36:19,244:INFO:Creating metrics dataframe
2025-03-31 18:36:19,244:INFO:Uploading results into container
2025-03-31 18:36:19,244:INFO:Uploading model into container now
2025-03-31 18:36:19,244:INFO:_master_model_container: 11
2025-03-31 18:36:19,244:INFO:_display_container: 2
2025-03-31 18:36:19,244:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-31 18:36:19,244:INFO:create_model() successfully completed......................................
2025-03-31 18:36:19,347:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:19,347:INFO:Creating metrics dataframe
2025-03-31 18:36:19,347:INFO:Initializing Extra Trees Classifier
2025-03-31 18:36:19,347:INFO:Total runtime is 0.19089388449986777 minutes
2025-03-31 18:36:19,347:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:19,347:INFO:Initializing create_model()
2025-03-31 18:36:19,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:19,347:INFO:Checking exceptions
2025-03-31 18:36:19,347:INFO:Importing libraries
2025-03-31 18:36:19,347:INFO:Copying training dataset
2025-03-31 18:36:19,347:INFO:Defining folds
2025-03-31 18:36:19,347:INFO:Declaring metric variables
2025-03-31 18:36:19,347:INFO:Importing untrained model
2025-03-31 18:36:19,347:INFO:Extra Trees Classifier Imported successfully
2025-03-31 18:36:19,347:INFO:Starting cross validation
2025-03-31 18:36:19,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:19,811:INFO:Calculating mean and std
2025-03-31 18:36:19,811:INFO:Creating metrics dataframe
2025-03-31 18:36:19,814:INFO:Uploading results into container
2025-03-31 18:36:19,814:INFO:Uploading model into container now
2025-03-31 18:36:19,814:INFO:_master_model_container: 12
2025-03-31 18:36:19,814:INFO:_display_container: 2
2025-03-31 18:36:19,814:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-03-31 18:36:19,814:INFO:create_model() successfully completed......................................
2025-03-31 18:36:19,908:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:19,908:INFO:Creating metrics dataframe
2025-03-31 18:36:19,911:INFO:Initializing Light Gradient Boosting Machine
2025-03-31 18:36:19,911:INFO:Total runtime is 0.20029927492141725 minutes
2025-03-31 18:36:19,911:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:19,911:INFO:Initializing create_model()
2025-03-31 18:36:19,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:19,911:INFO:Checking exceptions
2025-03-31 18:36:19,911:INFO:Importing libraries
2025-03-31 18:36:19,911:INFO:Copying training dataset
2025-03-31 18:36:19,913:INFO:Defining folds
2025-03-31 18:36:19,913:INFO:Declaring metric variables
2025-03-31 18:36:19,913:INFO:Importing untrained model
2025-03-31 18:36:19,913:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-31 18:36:19,913:INFO:Starting cross validation
2025-03-31 18:36:19,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:20,916:INFO:Calculating mean and std
2025-03-31 18:36:20,918:INFO:Creating metrics dataframe
2025-03-31 18:36:20,922:INFO:Uploading results into container
2025-03-31 18:36:20,922:INFO:Uploading model into container now
2025-03-31 18:36:20,924:INFO:_master_model_container: 13
2025-03-31 18:36:20,924:INFO:_display_container: 2
2025-03-31 18:36:20,926:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-31 18:36:20,926:INFO:create_model() successfully completed......................................
2025-03-31 18:36:21,033:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:21,033:INFO:Creating metrics dataframe
2025-03-31 18:36:21,033:INFO:Initializing Dummy Classifier
2025-03-31 18:36:21,033:INFO:Total runtime is 0.21898893515268963 minutes
2025-03-31 18:36:21,033:INFO:SubProcess create_model() called ==================================
2025-03-31 18:36:21,033:INFO:Initializing create_model()
2025-03-31 18:36:21,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F9AC1F3D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:21,033:INFO:Checking exceptions
2025-03-31 18:36:21,033:INFO:Importing libraries
2025-03-31 18:36:21,033:INFO:Copying training dataset
2025-03-31 18:36:21,033:INFO:Defining folds
2025-03-31 18:36:21,033:INFO:Declaring metric variables
2025-03-31 18:36:21,033:INFO:Importing untrained model
2025-03-31 18:36:21,033:INFO:Dummy Classifier Imported successfully
2025-03-31 18:36:21,033:INFO:Starting cross validation
2025-03-31 18:36:21,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,106:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-31 18:36:21,130:INFO:Calculating mean and std
2025-03-31 18:36:21,130:INFO:Creating metrics dataframe
2025-03-31 18:36:21,132:INFO:Uploading results into container
2025-03-31 18:36:21,132:INFO:Uploading model into container now
2025-03-31 18:36:21,132:INFO:_master_model_container: 14
2025-03-31 18:36:21,132:INFO:_display_container: 2
2025-03-31 18:36:21,132:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-03-31 18:36:21,132:INFO:create_model() successfully completed......................................
2025-03-31 18:36:21,223:INFO:SubProcess create_model() end ==================================
2025-03-31 18:36:21,223:INFO:Creating metrics dataframe
2025-03-31 18:36:21,224:WARNING:c:\Users\Thayse\.conda\envs\mlpipeline\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-31 18:36:21,224:INFO:Initializing create_model()
2025-03-31 18:36:21,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F9AA964BE0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 18:36:21,224:INFO:Checking exceptions
2025-03-31 18:36:21,224:INFO:Importing libraries
2025-03-31 18:36:21,224:INFO:Copying training dataset
2025-03-31 18:36:21,224:INFO:Defining folds
2025-03-31 18:36:21,224:INFO:Declaring metric variables
2025-03-31 18:36:21,224:INFO:Importing untrained model
2025-03-31 18:36:21,224:INFO:Declaring custom model
2025-03-31 18:36:21,224:INFO:Logistic Regression Imported successfully
2025-03-31 18:36:21,224:INFO:Cross validation set to False
2025-03-31 18:36:21,224:INFO:Fitting Model
2025-03-31 18:36:21,243:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-31 18:36:21,243:INFO:create_model() successfully completed......................................
2025-03-31 18:36:21,343:INFO:_master_model_container: 14
2025-03-31 18:36:21,343:INFO:_display_container: 2
2025-03-31 18:36:21,344:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-31 18:36:21,344:INFO:compare_models() successfully completed......................................
2025-04-05 16:48:44,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 16:48:44,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 16:48:44,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 16:48:44,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:01:04,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:01:04,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:01:04,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:01:04,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:02:37,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:02:37,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:02:37,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:02:37,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:05:53,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:05:53,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:05:53,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:05:53,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:06:35,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:06:35,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:06:35,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:06:35,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:09:06,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:09:06,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:09:06,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 17:09:06,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:21:04,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:21:04,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:21:04,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:21:04,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:24:54,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:24:54,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:24:54,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:24:54,777:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:27:01,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:27:01,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:27:01,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:27:01,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:28:35,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:28:35,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:28:35,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:28:35,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:55:58,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:55:58,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:55:58,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:55:58,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-12 17:55:58,628:INFO:PyCaret ClassificationExperiment
2025-04-12 17:55:58,628:INFO:Logging name: clf-default-name
2025-04-12 17:55:58,628:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-12 17:55:58,628:INFO:version 3.3.2
2025-04-12 17:55:58,628:INFO:Initializing setup()
2025-04-12 17:55:58,628:INFO:self.USI: b466
2025-04-12 17:55:58,628:INFO:self._variable_keys: {'y_test', 'fold_groups_param', 'data', 'log_plots_param', 'USI', 'pipeline', 'y', 'y_train', 'X', 'n_jobs_param', 'target_param', 'logging_param', 'is_multiclass', 'gpu_n_jobs_param', 'X_train', 'X_test', 'seed', 'fix_imbalance', 'fold_generator', 'gpu_param', 'html_param', 'exp_name_log', '_available_plots', 'exp_id', 'memory', 'idx', '_ml_usecase', 'fold_shuffle_param'}
2025-04-12 17:55:58,628:INFO:Checking environment
2025-04-12 17:55:58,628:INFO:python_version: 3.11.6
2025-04-12 17:55:58,628:INFO:python_build: ('tags/v3.11.6:8b6ee5b', 'Oct  2 2023 14:57:12')
2025-04-12 17:55:58,628:INFO:machine: AMD64
2025-04-12 17:55:58,641:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-12 17:55:58,646:INFO:Memory: svmem(total=7897944064, available=1123332096, percent=85.8, used=6774611968, free=1123332096)
2025-04-12 17:55:58,646:INFO:Physical Core: 6
2025-04-12 17:55:58,646:INFO:Logical Core: 12
2025-04-12 17:55:58,646:INFO:Checking libraries
2025-04-12 17:55:58,646:INFO:System:
2025-04-12 17:55:58,646:INFO:    python: 3.11.6 (tags/v3.11.6:8b6ee5b, Oct  2 2023, 14:57:12) [MSC v.1935 64 bit (AMD64)]
2025-04-12 17:55:58,646:INFO:executable: C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Scripts\python.exe
2025-04-12 17:55:58,646:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-12 17:55:58,646:INFO:PyCaret required dependencies:
2025-04-12 17:55:58,803:INFO:                 pip: 23.2.1
2025-04-12 17:55:58,803:INFO:          setuptools: 65.5.0
2025-04-12 17:55:58,803:INFO:             pycaret: 3.3.2
2025-04-12 17:55:58,803:INFO:             IPython: 9.0.2
2025-04-12 17:55:58,803:INFO:          ipywidgets: 8.1.5
2025-04-12 17:55:58,803:INFO:                tqdm: 4.67.1
2025-04-12 17:55:58,803:INFO:               numpy: 1.26.4
2025-04-12 17:55:58,803:INFO:              pandas: 2.1.4
2025-04-12 17:55:58,803:INFO:              jinja2: 3.1.6
2025-04-12 17:55:58,803:INFO:               scipy: 1.11.4
2025-04-12 17:55:58,803:INFO:              joblib: 1.3.2
2025-04-12 17:55:58,803:INFO:             sklearn: 1.4.2
2025-04-12 17:55:58,803:INFO:                pyod: 2.0.4
2025-04-12 17:55:58,803:INFO:            imblearn: 0.13.0
2025-04-12 17:55:58,803:INFO:   category_encoders: 2.7.0
2025-04-12 17:55:58,803:INFO:            lightgbm: 4.6.0
2025-04-12 17:55:58,803:INFO:               numba: 0.61.0
2025-04-12 17:55:58,803:INFO:            requests: 2.32.3
2025-04-12 17:55:58,803:INFO:          matplotlib: 3.7.5
2025-04-12 17:55:58,803:INFO:          scikitplot: 0.3.7
2025-04-12 17:55:58,804:INFO:         yellowbrick: 1.5
2025-04-12 17:55:58,804:INFO:              plotly: 5.24.1
2025-04-12 17:55:58,804:INFO:    plotly-resampler: Not installed
2025-04-12 17:55:58,804:INFO:             kaleido: 0.2.1
2025-04-12 17:55:58,804:INFO:           schemdraw: 0.15
2025-04-12 17:55:58,804:INFO:         statsmodels: 0.14.4
2025-04-12 17:55:58,804:INFO:              sktime: 0.26.0
2025-04-12 17:55:58,804:INFO:               tbats: 1.1.3
2025-04-12 17:55:58,804:INFO:            pmdarima: 2.0.4
2025-04-12 17:55:58,804:INFO:              psutil: 7.0.0
2025-04-12 17:55:58,804:INFO:          markupsafe: 3.0.2
2025-04-12 17:55:58,804:INFO:             pickle5: Not installed
2025-04-12 17:55:58,804:INFO:         cloudpickle: 3.1.1
2025-04-12 17:55:58,804:INFO:         deprecation: 2.1.0
2025-04-12 17:55:58,804:INFO:              xxhash: 3.5.0
2025-04-12 17:55:58,804:INFO:           wurlitzer: Not installed
2025-04-12 17:55:58,804:INFO:PyCaret optional dependencies:
2025-04-12 17:55:58,817:INFO:                shap: Not installed
2025-04-12 17:55:58,817:INFO:           interpret: Not installed
2025-04-12 17:55:58,817:INFO:                umap: Not installed
2025-04-12 17:55:58,817:INFO:     ydata_profiling: 4.16.1
2025-04-12 17:55:58,817:INFO:  explainerdashboard: Not installed
2025-04-12 17:55:58,817:INFO:             autoviz: Not installed
2025-04-12 17:55:58,817:INFO:           fairlearn: Not installed
2025-04-12 17:55:58,817:INFO:          deepchecks: Not installed
2025-04-12 17:55:58,817:INFO:             xgboost: Not installed
2025-04-12 17:55:58,817:INFO:            catboost: Not installed
2025-04-12 17:55:58,817:INFO:              kmodes: Not installed
2025-04-12 17:55:58,817:INFO:             mlxtend: Not installed
2025-04-12 17:55:58,817:INFO:       statsforecast: Not installed
2025-04-12 17:55:58,817:INFO:        tune_sklearn: Not installed
2025-04-12 17:55:58,817:INFO:                 ray: Not installed
2025-04-12 17:55:58,817:INFO:            hyperopt: Not installed
2025-04-12 17:55:58,817:INFO:              optuna: Not installed
2025-04-12 17:55:58,817:INFO:               skopt: Not installed
2025-04-12 17:55:58,817:INFO:              mlflow: Not installed
2025-04-12 17:55:58,817:INFO:              gradio: Not installed
2025-04-12 17:55:58,817:INFO:             fastapi: Not installed
2025-04-12 17:55:58,817:INFO:             uvicorn: Not installed
2025-04-12 17:55:58,817:INFO:              m2cgen: Not installed
2025-04-12 17:55:58,818:INFO:           evidently: Not installed
2025-04-12 17:55:58,818:INFO:               fugue: Not installed
2025-04-12 17:55:58,818:INFO:           streamlit: Not installed
2025-04-12 17:55:58,818:INFO:             prophet: Not installed
2025-04-12 17:55:58,818:INFO:None
2025-04-12 17:55:58,818:INFO:Set up data.
2025-04-12 17:55:58,846:INFO:Set up folding strategy.
2025-04-12 17:55:58,846:INFO:Set up train/test split.
2025-04-12 17:55:58,857:INFO:Set up index.
2025-04-12 17:55:58,860:INFO:Assigning column types.
2025-04-12 17:55:58,864:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-12 17:55:58,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-12 17:55:58,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-12 17:55:58,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:58,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:58,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-12 17:55:58,974:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-12 17:55:58,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:58,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:58,997:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-12 17:55:59,035:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-12 17:55:59,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,095:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-12 17:55:59,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,118:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-12 17:55:59,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:55:59,252:INFO:Preparing preprocessing pipeline...
2025-04-12 17:55:59,255:INFO:Set up label encoding.
2025-04-12 17:55:59,255:INFO:Set up simple imputation.
2025-04-12 17:55:59,260:INFO:Set up encoding of ordinal features.
2025-04-12 17:55:59,264:INFO:Set up encoding of categorical features.
2025-04-12 17:55:59,265:INFO:Set up column name cleaning.
2025-04-12 17:55:59,938:INFO:Finished creating preprocessing pipeline.
2025-04-12 17:55:59,978:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joaog\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-04-12 17:55:59,978:INFO:Creating final display dataframe.
2025-04-12 17:56:00,612:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type            Binary
3                Target mapping        e: 0, p: 1
4           Original data shape        (8124, 23)
5        Transformed data shape       (8124, 113)
6   Transformed train set shape       (5686, 113)
7    Transformed test set shape       (2438, 113)
8          Categorical features                22
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              b466
2025-04-12 17:56:00,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:56:00,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:56:00,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:56:00,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-12 17:56:00,735:INFO:setup() successfully completed in 2.12s...............
2025-04-12 17:56:00,736:INFO:Initializing compare_models()
2025-04-12 17:56:00,736:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-04-12 17:56:00,736:INFO:Checking exceptions
2025-04-12 17:56:00,739:INFO:Preparing display monitor
2025-04-12 17:56:00,741:INFO:Initializing Logistic Regression
2025-04-12 17:56:00,741:INFO:Total runtime is 0.0 minutes
2025-04-12 17:56:00,742:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:00,742:INFO:Initializing create_model()
2025-04-12 17:56:00,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:00,742:INFO:Checking exceptions
2025-04-12 17:56:00,742:INFO:Importing libraries
2025-04-12 17:56:00,742:INFO:Copying training dataset
2025-04-12 17:56:00,746:INFO:Defining folds
2025-04-12 17:56:00,746:INFO:Declaring metric variables
2025-04-12 17:56:00,746:INFO:Importing untrained model
2025-04-12 17:56:00,746:INFO:Logistic Regression Imported successfully
2025-04-12 17:56:00,746:INFO:Starting cross validation
2025-04-12 17:56:00,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:08,499:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,503:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,505:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,511:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,511:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,515:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,515:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,518:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,522:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,522:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,523:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,531:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,542:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,551:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,563:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,583:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,591:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,604:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,640:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,647:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,653:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,655:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,661:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,663:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,668:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,672:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,679:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,713:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,719:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,724:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:08,745:INFO:Calculating mean and std
2025-04-12 17:56:08,747:INFO:Creating metrics dataframe
2025-04-12 17:56:08,750:INFO:Uploading results into container
2025-04-12 17:56:08,751:INFO:Uploading model into container now
2025-04-12 17:56:08,752:INFO:_master_model_container: 1
2025-04-12 17:56:08,752:INFO:_display_container: 2
2025-04-12 17:56:08,752:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-12 17:56:08,752:INFO:create_model() successfully completed......................................
2025-04-12 17:56:08,992:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:08,992:INFO:Creating metrics dataframe
2025-04-12 17:56:08,994:INFO:Initializing K Neighbors Classifier
2025-04-12 17:56:08,994:INFO:Total runtime is 0.13756142059961954 minutes
2025-04-12 17:56:08,994:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:08,994:INFO:Initializing create_model()
2025-04-12 17:56:08,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:08,994:INFO:Checking exceptions
2025-04-12 17:56:08,994:INFO:Importing libraries
2025-04-12 17:56:08,994:INFO:Copying training dataset
2025-04-12 17:56:08,998:INFO:Defining folds
2025-04-12 17:56:08,998:INFO:Declaring metric variables
2025-04-12 17:56:08,998:INFO:Importing untrained model
2025-04-12 17:56:08,999:INFO:K Neighbors Classifier Imported successfully
2025-04-12 17:56:08,999:INFO:Starting cross validation
2025-04-12 17:56:09,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:10,684:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,693:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,701:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,765:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,766:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,768:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,772:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,772:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,777:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,780:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,780:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,784:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,787:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,793:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,794:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,796:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,800:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,801:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,802:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,804:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,807:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,809:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,810:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:10,816:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,256:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,260:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,264:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,319:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,324:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,331:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:14,349:INFO:Calculating mean and std
2025-04-12 17:56:14,350:INFO:Creating metrics dataframe
2025-04-12 17:56:14,352:INFO:Uploading results into container
2025-04-12 17:56:14,352:INFO:Uploading model into container now
2025-04-12 17:56:14,352:INFO:_master_model_container: 2
2025-04-12 17:56:14,352:INFO:_display_container: 2
2025-04-12 17:56:14,352:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-12 17:56:14,352:INFO:create_model() successfully completed......................................
2025-04-12 17:56:14,500:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:14,500:INFO:Creating metrics dataframe
2025-04-12 17:56:14,504:INFO:Initializing Naive Bayes
2025-04-12 17:56:14,504:INFO:Total runtime is 0.22939366102218628 minutes
2025-04-12 17:56:14,504:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:14,504:INFO:Initializing create_model()
2025-04-12 17:56:14,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:14,504:INFO:Checking exceptions
2025-04-12 17:56:14,504:INFO:Importing libraries
2025-04-12 17:56:14,504:INFO:Copying training dataset
2025-04-12 17:56:14,512:INFO:Defining folds
2025-04-12 17:56:14,512:INFO:Declaring metric variables
2025-04-12 17:56:14,512:INFO:Importing untrained model
2025-04-12 17:56:14,512:INFO:Naive Bayes Imported successfully
2025-04-12 17:56:14,512:INFO:Starting cross validation
2025-04-12 17:56:14,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:16,132:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,143:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,151:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,165:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,173:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,183:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,188:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,197:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,198:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,204:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,207:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,207:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,214:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,218:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,223:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,228:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,235:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,242:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,243:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,250:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,252:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,254:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,256:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,259:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,259:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,262:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,263:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,264:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,267:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:16,278:INFO:Calculating mean and std
2025-04-12 17:56:16,279:INFO:Creating metrics dataframe
2025-04-12 17:56:16,280:INFO:Uploading results into container
2025-04-12 17:56:16,281:INFO:Uploading model into container now
2025-04-12 17:56:16,281:INFO:_master_model_container: 3
2025-04-12 17:56:16,281:INFO:_display_container: 2
2025-04-12 17:56:16,281:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-04-12 17:56:16,281:INFO:create_model() successfully completed......................................
2025-04-12 17:56:16,407:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:16,407:INFO:Creating metrics dataframe
2025-04-12 17:56:16,409:INFO:Initializing Decision Tree Classifier
2025-04-12 17:56:16,409:INFO:Total runtime is 0.2611446499824524 minutes
2025-04-12 17:56:16,409:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:16,409:INFO:Initializing create_model()
2025-04-12 17:56:16,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:16,409:INFO:Checking exceptions
2025-04-12 17:56:16,409:INFO:Importing libraries
2025-04-12 17:56:16,409:INFO:Copying training dataset
2025-04-12 17:56:16,415:INFO:Defining folds
2025-04-12 17:56:16,415:INFO:Declaring metric variables
2025-04-12 17:56:16,417:INFO:Importing untrained model
2025-04-12 17:56:16,417:INFO:Decision Tree Classifier Imported successfully
2025-04-12 17:56:16,417:INFO:Starting cross validation
2025-04-12 17:56:16,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:17,933:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,947:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,957:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,963:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,970:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,977:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,987:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:17,996:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,013:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,018:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,024:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,051:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,058:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,065:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,072:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,074:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,078:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,080:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,083:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,086:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,088:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,094:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,098:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,101:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,103:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,107:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,109:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,113:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,118:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:18,132:INFO:Calculating mean and std
2025-04-12 17:56:18,133:INFO:Creating metrics dataframe
2025-04-12 17:56:18,134:INFO:Uploading results into container
2025-04-12 17:56:18,135:INFO:Uploading model into container now
2025-04-12 17:56:18,135:INFO:_master_model_container: 4
2025-04-12 17:56:18,135:INFO:_display_container: 2
2025-04-12 17:56:18,135:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-12 17:56:18,135:INFO:create_model() successfully completed......................................
2025-04-12 17:56:18,280:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:18,280:INFO:Creating metrics dataframe
2025-04-12 17:56:18,283:INFO:Initializing SVM - Linear Kernel
2025-04-12 17:56:18,283:INFO:Total runtime is 0.2923779884974162 minutes
2025-04-12 17:56:18,283:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:18,283:INFO:Initializing create_model()
2025-04-12 17:56:18,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:18,283:INFO:Checking exceptions
2025-04-12 17:56:18,283:INFO:Importing libraries
2025-04-12 17:56:18,283:INFO:Copying training dataset
2025-04-12 17:56:18,289:INFO:Defining folds
2025-04-12 17:56:18,289:INFO:Declaring metric variables
2025-04-12 17:56:18,289:INFO:Importing untrained model
2025-04-12 17:56:18,289:INFO:SVM - Linear Kernel Imported successfully
2025-04-12 17:56:18,290:INFO:Starting cross validation
2025-04-12 17:56:18,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:19,815:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,822:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,823:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,830:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,830:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,831:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,838:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,839:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,846:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,862:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,865:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,868:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,870:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,871:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,872:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,873:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,875:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,876:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,876:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,876:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,879:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,879:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,879:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,880:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,885:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,888:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,893:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,897:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,902:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,906:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:19,914:INFO:Calculating mean and std
2025-04-12 17:56:19,914:INFO:Creating metrics dataframe
2025-04-12 17:56:19,916:INFO:Uploading results into container
2025-04-12 17:56:19,916:INFO:Uploading model into container now
2025-04-12 17:56:19,916:INFO:_master_model_container: 5
2025-04-12 17:56:19,916:INFO:_display_container: 2
2025-04-12 17:56:19,917:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-04-12 17:56:19,917:INFO:create_model() successfully completed......................................
2025-04-12 17:56:20,047:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:20,047:INFO:Creating metrics dataframe
2025-04-12 17:56:20,049:INFO:Initializing Ridge Classifier
2025-04-12 17:56:20,049:INFO:Total runtime is 0.3218033750851949 minutes
2025-04-12 17:56:20,049:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:20,049:INFO:Initializing create_model()
2025-04-12 17:56:20,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:20,049:INFO:Checking exceptions
2025-04-12 17:56:20,049:INFO:Importing libraries
2025-04-12 17:56:20,050:INFO:Copying training dataset
2025-04-12 17:56:20,053:INFO:Defining folds
2025-04-12 17:56:20,053:INFO:Declaring metric variables
2025-04-12 17:56:20,053:INFO:Importing untrained model
2025-04-12 17:56:20,053:INFO:Ridge Classifier Imported successfully
2025-04-12 17:56:20,054:INFO:Starting cross validation
2025-04-12 17:56:20,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:21,588:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,590:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,595:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,598:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,605:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,606:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,617:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,624:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,630:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,630:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,637:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,638:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,647:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,648:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,653:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,655:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,660:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,665:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,675:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,680:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,681:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,686:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,687:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,688:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,692:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,692:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,693:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,697:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,697:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,701:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:21,713:INFO:Calculating mean and std
2025-04-12 17:56:21,713:INFO:Creating metrics dataframe
2025-04-12 17:56:21,715:INFO:Uploading results into container
2025-04-12 17:56:21,716:INFO:Uploading model into container now
2025-04-12 17:56:21,716:INFO:_master_model_container: 6
2025-04-12 17:56:21,716:INFO:_display_container: 2
2025-04-12 17:56:21,716:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-12 17:56:21,716:INFO:create_model() successfully completed......................................
2025-04-12 17:56:21,857:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:21,858:INFO:Creating metrics dataframe
2025-04-12 17:56:21,859:INFO:Initializing Random Forest Classifier
2025-04-12 17:56:21,860:INFO:Total runtime is 0.35196561813354493 minutes
2025-04-12 17:56:21,860:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:21,860:INFO:Initializing create_model()
2025-04-12 17:56:21,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:21,860:INFO:Checking exceptions
2025-04-12 17:56:21,860:INFO:Importing libraries
2025-04-12 17:56:21,860:INFO:Copying training dataset
2025-04-12 17:56:21,864:INFO:Defining folds
2025-04-12 17:56:21,864:INFO:Declaring metric variables
2025-04-12 17:56:21,864:INFO:Importing untrained model
2025-04-12 17:56:21,864:INFO:Random Forest Classifier Imported successfully
2025-04-12 17:56:21,866:INFO:Starting cross validation
2025-04-12 17:56:21,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:23,974:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,980:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,982:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,983:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,984:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,987:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,987:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,989:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,989:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,991:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,995:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,996:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,998:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:23,998:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,002:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,016:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,021:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,028:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,034:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,039:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,043:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,083:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,083:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,087:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,087:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,090:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,091:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,091:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,094:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:24,105:INFO:Calculating mean and std
2025-04-12 17:56:24,106:INFO:Creating metrics dataframe
2025-04-12 17:56:24,107:INFO:Uploading results into container
2025-04-12 17:56:24,109:INFO:Uploading model into container now
2025-04-12 17:56:24,109:INFO:_master_model_container: 7
2025-04-12 17:56:24,109:INFO:_display_container: 2
2025-04-12 17:56:24,109:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-12 17:56:24,109:INFO:create_model() successfully completed......................................
2025-04-12 17:56:24,240:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:24,240:INFO:Creating metrics dataframe
2025-04-12 17:56:24,242:INFO:Initializing Quadratic Discriminant Analysis
2025-04-12 17:56:24,242:INFO:Total runtime is 0.3916915496190389 minutes
2025-04-12 17:56:24,242:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:24,243:INFO:Initializing create_model()
2025-04-12 17:56:24,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:24,243:INFO:Checking exceptions
2025-04-12 17:56:24,243:INFO:Importing libraries
2025-04-12 17:56:24,243:INFO:Copying training dataset
2025-04-12 17:56:24,247:INFO:Defining folds
2025-04-12 17:56:24,247:INFO:Declaring metric variables
2025-04-12 17:56:24,247:INFO:Importing untrained model
2025-04-12 17:56:24,248:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-12 17:56:24,248:INFO:Starting cross validation
2025-04-12 17:56:24,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:25,699:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,716:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,771:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,775:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,840:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,911:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:25,919:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:25,920:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,927:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:25,931:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,962:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:25,986:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,008:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-12 17:56:26,012:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,016:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,027:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,028:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,039:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,053:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,062:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,072:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,092:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,099:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,107:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,109:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,115:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,121:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,139:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,139:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,142:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,143:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,143:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,147:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,148:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,148:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,151:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,154:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,159:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,163:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:26,176:INFO:Calculating mean and std
2025-04-12 17:56:26,177:INFO:Creating metrics dataframe
2025-04-12 17:56:26,179:INFO:Uploading results into container
2025-04-12 17:56:26,179:INFO:Uploading model into container now
2025-04-12 17:56:26,180:INFO:_master_model_container: 8
2025-04-12 17:56:26,180:INFO:_display_container: 2
2025-04-12 17:56:26,180:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-12 17:56:26,180:INFO:create_model() successfully completed......................................
2025-04-12 17:56:26,317:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:26,317:INFO:Creating metrics dataframe
2025-04-12 17:56:26,319:INFO:Initializing Ada Boost Classifier
2025-04-12 17:56:26,319:INFO:Total runtime is 0.4263062397638957 minutes
2025-04-12 17:56:26,320:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:26,320:INFO:Initializing create_model()
2025-04-12 17:56:26,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:26,320:INFO:Checking exceptions
2025-04-12 17:56:26,320:INFO:Importing libraries
2025-04-12 17:56:26,320:INFO:Copying training dataset
2025-04-12 17:56:26,325:INFO:Defining folds
2025-04-12 17:56:26,325:INFO:Declaring metric variables
2025-04-12 17:56:26,325:INFO:Importing untrained model
2025-04-12 17:56:26,325:INFO:Ada Boost Classifier Imported successfully
2025-04-12 17:56:26,325:INFO:Starting cross validation
2025-04-12 17:56:26,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:27,638:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,712:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,730:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,783:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,817:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,820:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,831:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,832:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:27,871:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-12 17:56:29,331:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,337:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,338:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,345:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,345:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,348:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,351:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,355:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,363:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,373:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,379:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,384:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,386:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,390:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,392:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,393:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,397:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,397:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,399:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,403:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,406:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,406:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,410:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,411:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,412:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,415:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,415:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,418:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,420:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,424:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:29,433:INFO:Calculating mean and std
2025-04-12 17:56:29,433:INFO:Creating metrics dataframe
2025-04-12 17:56:29,435:INFO:Uploading results into container
2025-04-12 17:56:29,435:INFO:Uploading model into container now
2025-04-12 17:56:29,435:INFO:_master_model_container: 9
2025-04-12 17:56:29,437:INFO:_display_container: 2
2025-04-12 17:56:29,437:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-04-12 17:56:29,437:INFO:create_model() successfully completed......................................
2025-04-12 17:56:29,565:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:29,565:INFO:Creating metrics dataframe
2025-04-12 17:56:29,567:INFO:Initializing Gradient Boosting Classifier
2025-04-12 17:56:29,567:INFO:Total runtime is 0.48043519258499146 minutes
2025-04-12 17:56:29,567:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:29,567:INFO:Initializing create_model()
2025-04-12 17:56:29,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:29,567:INFO:Checking exceptions
2025-04-12 17:56:29,567:INFO:Importing libraries
2025-04-12 17:56:29,567:INFO:Copying training dataset
2025-04-12 17:56:29,571:INFO:Defining folds
2025-04-12 17:56:29,571:INFO:Declaring metric variables
2025-04-12 17:56:29,571:INFO:Importing untrained model
2025-04-12 17:56:29,571:INFO:Gradient Boosting Classifier Imported successfully
2025-04-12 17:56:29,572:INFO:Starting cross validation
2025-04-12 17:56:29,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:32,412:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,419:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,422:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,424:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,428:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,437:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,457:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,465:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,467:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,468:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,471:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,471:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,472:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,476:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,476:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,485:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,485:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,489:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,489:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,490:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,492:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,493:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,493:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,493:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,496:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,497:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,499:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,501:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,502:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,506:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:32,514:INFO:Calculating mean and std
2025-04-12 17:56:32,515:INFO:Creating metrics dataframe
2025-04-12 17:56:32,516:INFO:Uploading results into container
2025-04-12 17:56:32,516:INFO:Uploading model into container now
2025-04-12 17:56:32,516:INFO:_master_model_container: 10
2025-04-12 17:56:32,517:INFO:_display_container: 2
2025-04-12 17:56:32,517:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-12 17:56:32,517:INFO:create_model() successfully completed......................................
2025-04-12 17:56:32,637:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:32,637:INFO:Creating metrics dataframe
2025-04-12 17:56:32,639:INFO:Initializing Linear Discriminant Analysis
2025-04-12 17:56:32,639:INFO:Total runtime is 0.5316391666730245 minutes
2025-04-12 17:56:32,639:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:32,639:INFO:Initializing create_model()
2025-04-12 17:56:32,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:32,639:INFO:Checking exceptions
2025-04-12 17:56:32,639:INFO:Importing libraries
2025-04-12 17:56:32,639:INFO:Copying training dataset
2025-04-12 17:56:32,643:INFO:Defining folds
2025-04-12 17:56:32,643:INFO:Declaring metric variables
2025-04-12 17:56:32,643:INFO:Importing untrained model
2025-04-12 17:56:32,643:INFO:Linear Discriminant Analysis Imported successfully
2025-04-12 17:56:32,645:INFO:Starting cross validation
2025-04-12 17:56:32,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:34,430:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,441:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,451:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,453:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,460:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,467:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,479:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,483:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,484:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,487:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,490:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,495:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,505:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,510:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,513:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,519:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,526:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,528:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,529:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,532:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,533:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,534:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,535:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,536:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,536:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,537:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,539:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,540:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,541:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,542:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:34,551:INFO:Calculating mean and std
2025-04-12 17:56:34,552:INFO:Creating metrics dataframe
2025-04-12 17:56:34,553:INFO:Uploading results into container
2025-04-12 17:56:34,553:INFO:Uploading model into container now
2025-04-12 17:56:34,553:INFO:_master_model_container: 11
2025-04-12 17:56:34,553:INFO:_display_container: 2
2025-04-12 17:56:34,553:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-12 17:56:34,553:INFO:create_model() successfully completed......................................
2025-04-12 17:56:34,673:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:34,673:INFO:Creating metrics dataframe
2025-04-12 17:56:34,676:INFO:Initializing Extra Trees Classifier
2025-04-12 17:56:34,676:INFO:Total runtime is 0.565587309996287 minutes
2025-04-12 17:56:34,676:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:34,676:INFO:Initializing create_model()
2025-04-12 17:56:34,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:34,676:INFO:Checking exceptions
2025-04-12 17:56:34,677:INFO:Importing libraries
2025-04-12 17:56:34,677:INFO:Copying training dataset
2025-04-12 17:56:34,680:INFO:Defining folds
2025-04-12 17:56:34,680:INFO:Declaring metric variables
2025-04-12 17:56:34,680:INFO:Importing untrained model
2025-04-12 17:56:34,681:INFO:Extra Trees Classifier Imported successfully
2025-04-12 17:56:34,681:INFO:Starting cross validation
2025-04-12 17:56:34,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:36,587:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,594:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,594:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,601:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,601:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,604:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,604:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,606:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,609:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,610:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,612:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,614:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,616:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,617:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,618:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,618:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,620:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,623:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,625:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,626:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,630:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,631:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,635:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,662:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,665:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,669:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,673:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,675:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,679:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:36,687:INFO:Calculating mean and std
2025-04-12 17:56:36,687:INFO:Creating metrics dataframe
2025-04-12 17:56:36,689:INFO:Uploading results into container
2025-04-12 17:56:36,689:INFO:Uploading model into container now
2025-04-12 17:56:36,689:INFO:_master_model_container: 12
2025-04-12 17:56:36,689:INFO:_display_container: 2
2025-04-12 17:56:36,690:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-12 17:56:36,690:INFO:create_model() successfully completed......................................
2025-04-12 17:56:36,808:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:36,808:INFO:Creating metrics dataframe
2025-04-12 17:56:36,810:INFO:Initializing Light Gradient Boosting Machine
2025-04-12 17:56:36,810:INFO:Total runtime is 0.6011599858601888 minutes
2025-04-12 17:56:36,810:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:36,811:INFO:Initializing create_model()
2025-04-12 17:56:36,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:36,811:INFO:Checking exceptions
2025-04-12 17:56:36,811:INFO:Importing libraries
2025-04-12 17:56:36,811:INFO:Copying training dataset
2025-04-12 17:56:36,815:INFO:Defining folds
2025-04-12 17:56:36,815:INFO:Declaring metric variables
2025-04-12 17:56:36,815:INFO:Importing untrained model
2025-04-12 17:56:36,816:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-12 17:56:36,816:INFO:Starting cross validation
2025-04-12 17:56:36,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:39,231:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,240:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,247:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,268:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,274:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,281:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,404:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,410:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,417:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,422:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,429:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,436:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,439:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,445:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,452:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,550:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,557:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,560:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,563:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,566:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,574:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,592:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,598:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,603:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,623:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,629:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,636:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,669:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,675:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,681:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:39,694:INFO:Calculating mean and std
2025-04-12 17:56:39,694:INFO:Creating metrics dataframe
2025-04-12 17:56:39,696:INFO:Uploading results into container
2025-04-12 17:56:39,697:INFO:Uploading model into container now
2025-04-12 17:56:39,697:INFO:_master_model_container: 13
2025-04-12 17:56:39,697:INFO:_display_container: 2
2025-04-12 17:56:39,697:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-04-12 17:56:39,699:INFO:create_model() successfully completed......................................
2025-04-12 17:56:39,902:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:39,902:INFO:Creating metrics dataframe
2025-04-12 17:56:39,904:INFO:Initializing Dummy Classifier
2025-04-12 17:56:39,904:INFO:Total runtime is 0.6527194142341614 minutes
2025-04-12 17:56:39,904:INFO:SubProcess create_model() called ==================================
2025-04-12 17:56:39,904:INFO:Initializing create_model()
2025-04-12 17:56:39,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020D4C504B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:39,904:INFO:Checking exceptions
2025-04-12 17:56:39,904:INFO:Importing libraries
2025-04-12 17:56:39,904:INFO:Copying training dataset
2025-04-12 17:56:39,909:INFO:Defining folds
2025-04-12 17:56:39,909:INFO:Declaring metric variables
2025-04-12 17:56:39,909:INFO:Importing untrained model
2025-04-12 17:56:39,910:INFO:Dummy Classifier Imported successfully
2025-04-12 17:56:39,910:INFO:Starting cross validation
2025-04-12 17:56:39,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-12 17:56:41,464:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,472:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,472:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,475:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,478:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,479:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,481:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,483:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,485:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,490:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,494:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,496:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,497:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,502:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,507:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,512:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,515:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,521:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,523:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,525:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,529:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,530:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,533:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,537:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,542:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,544:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,544:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,548:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,549:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,551:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,551:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,551:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,553:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,553:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,555:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,557:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,574:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,578:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,580:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-12 17:56:41,581:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-12 17:56:41,592:INFO:Calculating mean and std
2025-04-12 17:56:41,593:INFO:Creating metrics dataframe
2025-04-12 17:56:41,595:INFO:Uploading results into container
2025-04-12 17:56:41,595:INFO:Uploading model into container now
2025-04-12 17:56:41,596:INFO:_master_model_container: 14
2025-04-12 17:56:41,596:INFO:_display_container: 2
2025-04-12 17:56:41,596:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-04-12 17:56:41,596:INFO:create_model() successfully completed......................................
2025-04-12 17:56:41,730:INFO:SubProcess create_model() end ==================================
2025-04-12 17:56:41,730:INFO:Creating metrics dataframe
2025-04-12 17:56:41,732:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-04-12 17:56:41,733:INFO:Initializing create_model()
2025-04-12 17:56:41,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020D4A6C6F90>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-12 17:56:41,734:INFO:Checking exceptions
2025-04-12 17:56:41,734:INFO:Importing libraries
2025-04-12 17:56:41,734:INFO:Copying training dataset
2025-04-12 17:56:41,738:INFO:Defining folds
2025-04-12 17:56:41,738:INFO:Declaring metric variables
2025-04-12 17:56:41,738:INFO:Importing untrained model
2025-04-12 17:56:41,738:INFO:Declaring custom model
2025-04-12 17:56:41,739:INFO:K Neighbors Classifier Imported successfully
2025-04-12 17:56:41,741:INFO:Cross validation set to False
2025-04-12 17:56:41,742:INFO:Fitting Model
2025-04-12 17:56:42,044:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-12 17:56:42,044:INFO:create_model() successfully completed......................................
2025-04-12 17:56:42,180:INFO:_master_model_container: 14
2025-04-12 17:56:42,180:INFO:_display_container: 2
2025-04-12 17:56:42,180:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-12 17:56:42,180:INFO:compare_models() successfully completed......................................
2025-04-13 19:58:52,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 19:58:52,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 19:58:52,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 19:58:52,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 19:58:54,019:INFO:PyCaret ClassificationExperiment
2025-04-13 19:58:54,019:INFO:Logging name: clf-default-name
2025-04-13 19:58:54,019:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-13 19:58:54,019:INFO:version 3.3.2
2025-04-13 19:58:54,019:INFO:Initializing setup()
2025-04-13 19:58:54,019:INFO:self.USI: f91d
2025-04-13 19:58:54,019:INFO:self._variable_keys: {'X_test', 'gpu_n_jobs_param', 'y_train', 'gpu_param', 'X', 'seed', 'fix_imbalance', 'pipeline', '_ml_usecase', 'data', 'n_jobs_param', 'is_multiclass', 'fold_generator', 'log_plots_param', 'y_test', 'X_train', 'USI', 'target_param', 'idx', 'exp_name_log', '_available_plots', 'html_param', 'fold_groups_param', 'fold_shuffle_param', 'y', 'memory', 'exp_id', 'logging_param'}
2025-04-13 19:58:54,019:INFO:Checking environment
2025-04-13 19:58:54,019:INFO:python_version: 3.11.6
2025-04-13 19:58:54,019:INFO:python_build: ('tags/v3.11.6:8b6ee5b', 'Oct  2 2023 14:57:12')
2025-04-13 19:58:54,019:INFO:machine: AMD64
2025-04-13 19:58:54,045:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-13 19:58:54,050:INFO:Memory: svmem(total=7897944064, available=476422144, percent=94.0, used=7421521920, free=476422144)
2025-04-13 19:58:54,050:INFO:Physical Core: 6
2025-04-13 19:58:54,050:INFO:Logical Core: 12
2025-04-13 19:58:54,050:INFO:Checking libraries
2025-04-13 19:58:54,050:INFO:System:
2025-04-13 19:58:54,050:INFO:    python: 3.11.6 (tags/v3.11.6:8b6ee5b, Oct  2 2023, 14:57:12) [MSC v.1935 64 bit (AMD64)]
2025-04-13 19:58:54,050:INFO:executable: C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Scripts\python.exe
2025-04-13 19:58:54,050:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-13 19:58:54,050:INFO:PyCaret required dependencies:
2025-04-13 19:58:54,129:INFO:                 pip: 23.2.1
2025-04-13 19:58:54,129:INFO:          setuptools: 65.5.0
2025-04-13 19:58:54,129:INFO:             pycaret: 3.3.2
2025-04-13 19:58:54,129:INFO:             IPython: 9.0.2
2025-04-13 19:58:54,129:INFO:          ipywidgets: 8.1.5
2025-04-13 19:58:54,129:INFO:                tqdm: 4.67.1
2025-04-13 19:58:54,129:INFO:               numpy: 1.26.4
2025-04-13 19:58:54,129:INFO:              pandas: 2.1.4
2025-04-13 19:58:54,129:INFO:              jinja2: 3.1.6
2025-04-13 19:58:54,129:INFO:               scipy: 1.11.4
2025-04-13 19:58:54,129:INFO:              joblib: 1.3.2
2025-04-13 19:58:54,129:INFO:             sklearn: 1.4.2
2025-04-13 19:58:54,129:INFO:                pyod: 2.0.4
2025-04-13 19:58:54,129:INFO:            imblearn: 0.13.0
2025-04-13 19:58:54,129:INFO:   category_encoders: 2.7.0
2025-04-13 19:58:54,129:INFO:            lightgbm: 4.6.0
2025-04-13 19:58:54,129:INFO:               numba: 0.61.0
2025-04-13 19:58:54,129:INFO:            requests: 2.32.3
2025-04-13 19:58:54,129:INFO:          matplotlib: 3.7.5
2025-04-13 19:58:54,129:INFO:          scikitplot: 0.3.7
2025-04-13 19:58:54,129:INFO:         yellowbrick: 1.5
2025-04-13 19:58:54,129:INFO:              plotly: 5.24.1
2025-04-13 19:58:54,129:INFO:    plotly-resampler: Not installed
2025-04-13 19:58:54,129:INFO:             kaleido: 0.2.1
2025-04-13 19:58:54,129:INFO:           schemdraw: 0.15
2025-04-13 19:58:54,129:INFO:         statsmodels: 0.14.4
2025-04-13 19:58:54,129:INFO:              sktime: 0.26.0
2025-04-13 19:58:54,129:INFO:               tbats: 1.1.3
2025-04-13 19:58:54,129:INFO:            pmdarima: 2.0.4
2025-04-13 19:58:54,131:INFO:              psutil: 7.0.0
2025-04-13 19:58:54,131:INFO:          markupsafe: 3.0.2
2025-04-13 19:58:54,131:INFO:             pickle5: Not installed
2025-04-13 19:58:54,131:INFO:         cloudpickle: 3.1.1
2025-04-13 19:58:54,131:INFO:         deprecation: 2.1.0
2025-04-13 19:58:54,131:INFO:              xxhash: 3.5.0
2025-04-13 19:58:54,131:INFO:           wurlitzer: Not installed
2025-04-13 19:58:54,131:INFO:PyCaret optional dependencies:
2025-04-13 19:58:54,151:INFO:                shap: Not installed
2025-04-13 19:58:54,151:INFO:           interpret: Not installed
2025-04-13 19:58:54,151:INFO:                umap: Not installed
2025-04-13 19:58:54,151:INFO:     ydata_profiling: 4.16.1
2025-04-13 19:58:54,151:INFO:  explainerdashboard: Not installed
2025-04-13 19:58:54,151:INFO:             autoviz: Not installed
2025-04-13 19:58:54,151:INFO:           fairlearn: Not installed
2025-04-13 19:58:54,151:INFO:          deepchecks: Not installed
2025-04-13 19:58:54,151:INFO:             xgboost: Not installed
2025-04-13 19:58:54,152:INFO:            catboost: Not installed
2025-04-13 19:58:54,152:INFO:              kmodes: Not installed
2025-04-13 19:58:54,152:INFO:             mlxtend: Not installed
2025-04-13 19:58:54,152:INFO:       statsforecast: Not installed
2025-04-13 19:58:54,152:INFO:        tune_sklearn: Not installed
2025-04-13 19:58:54,152:INFO:                 ray: Not installed
2025-04-13 19:58:54,152:INFO:            hyperopt: Not installed
2025-04-13 19:58:54,152:INFO:              optuna: Not installed
2025-04-13 19:58:54,152:INFO:               skopt: Not installed
2025-04-13 19:58:54,152:INFO:              mlflow: Not installed
2025-04-13 19:58:54,152:INFO:              gradio: Not installed
2025-04-13 19:58:54,152:INFO:             fastapi: Not installed
2025-04-13 19:58:54,152:INFO:             uvicorn: Not installed
2025-04-13 19:58:54,152:INFO:              m2cgen: Not installed
2025-04-13 19:58:54,152:INFO:           evidently: Not installed
2025-04-13 19:58:54,152:INFO:               fugue: Not installed
2025-04-13 19:58:54,152:INFO:           streamlit: Not installed
2025-04-13 19:58:54,152:INFO:             prophet: Not installed
2025-04-13 19:58:54,152:INFO:None
2025-04-13 19:58:54,153:INFO:Set up data.
2025-04-13 19:58:54,184:INFO:Set up folding strategy.
2025-04-13 19:58:54,184:INFO:Set up train/test split.
2025-04-13 19:58:54,201:INFO:Set up index.
2025-04-13 19:58:54,202:INFO:Assigning column types.
2025-04-13 19:58:54,206:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-13 19:58:54,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-13 19:58:54,246:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 19:58:54,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-13 19:58:54,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 19:58:54,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,339:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-13 19:58:54,377:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 19:58:54,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 19:58:54,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,496:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-13 19:58:54,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:54,673:INFO:Preparing preprocessing pipeline...
2025-04-13 19:58:54,675:INFO:Set up label encoding.
2025-04-13 19:58:54,675:INFO:Set up simple imputation.
2025-04-13 19:58:54,680:INFO:Set up encoding of ordinal features.
2025-04-13 19:58:54,685:INFO:Set up encoding of categorical features.
2025-04-13 19:58:54,685:INFO:Set up column name cleaning.
2025-04-13 19:58:55,240:INFO:Finished creating preprocessing pipeline.
2025-04-13 19:58:55,291:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joaog\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-04-13 19:58:55,291:INFO:Creating final display dataframe.
2025-04-13 19:58:56,071:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type            Binary
3                Target mapping        e: 0, p: 1
4           Original data shape        (8124, 23)
5        Transformed data shape       (8124, 113)
6   Transformed train set shape       (5686, 113)
7    Transformed test set shape       (2438, 113)
8          Categorical features                22
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              f91d
2025-04-13 19:58:56,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:56,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:56,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:56,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 19:58:56,269:INFO:setup() successfully completed in 2.26s...............
2025-04-13 19:58:56,269:INFO:Initializing compare_models()
2025-04-13 19:58:56,269:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-04-13 19:58:56,269:INFO:Checking exceptions
2025-04-13 19:58:56,274:INFO:Preparing display monitor
2025-04-13 19:58:56,278:INFO:Initializing Logistic Regression
2025-04-13 19:58:56,278:INFO:Total runtime is 0.0 minutes
2025-04-13 19:58:56,278:INFO:SubProcess create_model() called ==================================
2025-04-13 19:58:56,278:INFO:Initializing create_model()
2025-04-13 19:58:56,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:58:56,278:INFO:Checking exceptions
2025-04-13 19:58:56,278:INFO:Importing libraries
2025-04-13 19:58:56,278:INFO:Copying training dataset
2025-04-13 19:58:56,284:INFO:Defining folds
2025-04-13 19:58:56,284:INFO:Declaring metric variables
2025-04-13 19:58:56,284:INFO:Importing untrained model
2025-04-13 19:58:56,284:INFO:Logistic Regression Imported successfully
2025-04-13 19:58:56,284:INFO:Starting cross validation
2025-04-13 19:58:56,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:04,546:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,547:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,552:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,560:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,562:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,562:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,563:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,567:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,570:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,570:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,571:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,573:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,577:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,578:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,582:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,583:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,588:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,589:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,589:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,595:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,601:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,601:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,608:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,615:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,622:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,622:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,630:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,636:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:04,650:INFO:Calculating mean and std
2025-04-13 19:59:04,655:INFO:Creating metrics dataframe
2025-04-13 19:59:04,663:INFO:Uploading results into container
2025-04-13 19:59:04,665:INFO:Uploading model into container now
2025-04-13 19:59:04,666:INFO:_master_model_container: 1
2025-04-13 19:59:04,670:INFO:_display_container: 2
2025-04-13 19:59:04,671:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-13 19:59:04,671:INFO:create_model() successfully completed......................................
2025-04-13 19:59:04,937:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:04,937:INFO:Creating metrics dataframe
2025-04-13 19:59:04,941:INFO:Initializing K Neighbors Classifier
2025-04-13 19:59:04,941:INFO:Total runtime is 0.14438641866048177 minutes
2025-04-13 19:59:04,941:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:04,941:INFO:Initializing create_model()
2025-04-13 19:59:04,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:04,941:INFO:Checking exceptions
2025-04-13 19:59:04,941:INFO:Importing libraries
2025-04-13 19:59:04,942:INFO:Copying training dataset
2025-04-13 19:59:04,948:INFO:Defining folds
2025-04-13 19:59:04,949:INFO:Declaring metric variables
2025-04-13 19:59:04,949:INFO:Importing untrained model
2025-04-13 19:59:04,949:INFO:K Neighbors Classifier Imported successfully
2025-04-13 19:59:04,949:INFO:Starting cross validation
2025-04-13 19:59:04,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:06,711:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,717:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,723:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,724:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,731:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,731:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,738:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,745:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,770:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,778:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,785:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,788:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,794:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,797:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,802:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,804:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,811:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,848:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,853:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,858:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,859:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,863:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:06,870:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,279:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,284:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,287:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,342:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,346:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,350:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:10,361:INFO:Calculating mean and std
2025-04-13 19:59:10,362:INFO:Creating metrics dataframe
2025-04-13 19:59:10,363:INFO:Uploading results into container
2025-04-13 19:59:10,364:INFO:Uploading model into container now
2025-04-13 19:59:10,364:INFO:_master_model_container: 2
2025-04-13 19:59:10,364:INFO:_display_container: 2
2025-04-13 19:59:10,364:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-13 19:59:10,364:INFO:create_model() successfully completed......................................
2025-04-13 19:59:10,500:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:10,500:INFO:Creating metrics dataframe
2025-04-13 19:59:10,502:INFO:Initializing Naive Bayes
2025-04-13 19:59:10,502:INFO:Total runtime is 0.23707874218622843 minutes
2025-04-13 19:59:10,502:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:10,502:INFO:Initializing create_model()
2025-04-13 19:59:10,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:10,502:INFO:Checking exceptions
2025-04-13 19:59:10,502:INFO:Importing libraries
2025-04-13 19:59:10,502:INFO:Copying training dataset
2025-04-13 19:59:10,506:INFO:Defining folds
2025-04-13 19:59:10,506:INFO:Declaring metric variables
2025-04-13 19:59:10,506:INFO:Importing untrained model
2025-04-13 19:59:10,507:INFO:Naive Bayes Imported successfully
2025-04-13 19:59:10,507:INFO:Starting cross validation
2025-04-13 19:59:10,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:12,354:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,400:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,400:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,412:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,424:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,441:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,474:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,483:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,492:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,497:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,509:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,522:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,528:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,537:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,545:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,567:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,577:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,578:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,578:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,586:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,588:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,594:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,595:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,610:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,619:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,624:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,632:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,639:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,645:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:12,660:INFO:Calculating mean and std
2025-04-13 19:59:12,660:INFO:Creating metrics dataframe
2025-04-13 19:59:12,664:INFO:Uploading results into container
2025-04-13 19:59:12,664:INFO:Uploading model into container now
2025-04-13 19:59:12,664:INFO:_master_model_container: 3
2025-04-13 19:59:12,664:INFO:_display_container: 2
2025-04-13 19:59:12,664:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-04-13 19:59:12,665:INFO:create_model() successfully completed......................................
2025-04-13 19:59:12,896:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:12,896:INFO:Creating metrics dataframe
2025-04-13 19:59:12,898:INFO:Initializing Decision Tree Classifier
2025-04-13 19:59:12,898:INFO:Total runtime is 0.27700557311375934 minutes
2025-04-13 19:59:12,899:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:12,899:INFO:Initializing create_model()
2025-04-13 19:59:12,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:12,899:INFO:Checking exceptions
2025-04-13 19:59:12,899:INFO:Importing libraries
2025-04-13 19:59:12,899:INFO:Copying training dataset
2025-04-13 19:59:12,905:INFO:Defining folds
2025-04-13 19:59:12,905:INFO:Declaring metric variables
2025-04-13 19:59:12,905:INFO:Importing untrained model
2025-04-13 19:59:12,905:INFO:Decision Tree Classifier Imported successfully
2025-04-13 19:59:12,906:INFO:Starting cross validation
2025-04-13 19:59:12,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:15,105:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,119:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,138:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,151:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,153:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,159:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,162:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,168:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,172:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,203:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,212:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,220:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,230:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,240:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,309:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,356:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,364:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,370:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,376:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,385:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,393:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,410:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,416:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,417:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,422:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,422:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,428:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,469:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,473:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,476:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:15,489:INFO:Calculating mean and std
2025-04-13 19:59:15,489:INFO:Creating metrics dataframe
2025-04-13 19:59:15,491:INFO:Uploading results into container
2025-04-13 19:59:15,491:INFO:Uploading model into container now
2025-04-13 19:59:15,492:INFO:_master_model_container: 4
2025-04-13 19:59:15,492:INFO:_display_container: 2
2025-04-13 19:59:15,492:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-13 19:59:15,492:INFO:create_model() successfully completed......................................
2025-04-13 19:59:15,632:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:15,632:INFO:Creating metrics dataframe
2025-04-13 19:59:15,635:INFO:Initializing SVM - Linear Kernel
2025-04-13 19:59:15,635:INFO:Total runtime is 0.3226245681444804 minutes
2025-04-13 19:59:15,635:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:15,636:INFO:Initializing create_model()
2025-04-13 19:59:15,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:15,636:INFO:Checking exceptions
2025-04-13 19:59:15,636:INFO:Importing libraries
2025-04-13 19:59:15,636:INFO:Copying training dataset
2025-04-13 19:59:15,642:INFO:Defining folds
2025-04-13 19:59:15,642:INFO:Declaring metric variables
2025-04-13 19:59:15,642:INFO:Importing untrained model
2025-04-13 19:59:15,643:INFO:SVM - Linear Kernel Imported successfully
2025-04-13 19:59:15,643:INFO:Starting cross validation
2025-04-13 19:59:15,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:17,316:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,328:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,342:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,459:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,462:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,476:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,481:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,493:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,496:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,552:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,561:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,569:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,575:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,584:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,592:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,611:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,615:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,617:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,620:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,621:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,628:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,628:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,629:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,636:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,646:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,654:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,660:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,673:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,680:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,685:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:17,704:INFO:Calculating mean and std
2025-04-13 19:59:17,707:INFO:Creating metrics dataframe
2025-04-13 19:59:17,709:INFO:Uploading results into container
2025-04-13 19:59:17,710:INFO:Uploading model into container now
2025-04-13 19:59:17,710:INFO:_master_model_container: 5
2025-04-13 19:59:17,710:INFO:_display_container: 2
2025-04-13 19:59:17,710:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-04-13 19:59:17,711:INFO:create_model() successfully completed......................................
2025-04-13 19:59:17,910:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:17,910:INFO:Creating metrics dataframe
2025-04-13 19:59:17,912:INFO:Initializing Ridge Classifier
2025-04-13 19:59:17,912:INFO:Total runtime is 0.36057905753453573 minutes
2025-04-13 19:59:17,912:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:17,913:INFO:Initializing create_model()
2025-04-13 19:59:17,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:17,913:INFO:Checking exceptions
2025-04-13 19:59:17,913:INFO:Importing libraries
2025-04-13 19:59:17,913:INFO:Copying training dataset
2025-04-13 19:59:17,918:INFO:Defining folds
2025-04-13 19:59:17,918:INFO:Declaring metric variables
2025-04-13 19:59:17,918:INFO:Importing untrained model
2025-04-13 19:59:17,918:INFO:Ridge Classifier Imported successfully
2025-04-13 19:59:17,918:INFO:Starting cross validation
2025-04-13 19:59:17,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:19,446:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,455:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,462:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,465:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,466:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,472:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,473:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,473:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,477:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,478:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,480:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,480:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,481:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,484:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,487:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,487:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,490:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,491:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,494:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,496:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,504:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,518:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,521:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,524:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,526:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,528:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,531:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,544:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,547:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,551:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:19,567:INFO:Calculating mean and std
2025-04-13 19:59:19,568:INFO:Creating metrics dataframe
2025-04-13 19:59:19,570:INFO:Uploading results into container
2025-04-13 19:59:19,571:INFO:Uploading model into container now
2025-04-13 19:59:19,571:INFO:_master_model_container: 6
2025-04-13 19:59:19,571:INFO:_display_container: 2
2025-04-13 19:59:19,571:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-13 19:59:19,571:INFO:create_model() successfully completed......................................
2025-04-13 19:59:19,712:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:19,712:INFO:Creating metrics dataframe
2025-04-13 19:59:19,715:INFO:Initializing Random Forest Classifier
2025-04-13 19:59:19,715:INFO:Total runtime is 0.3906243681907654 minutes
2025-04-13 19:59:19,715:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:19,716:INFO:Initializing create_model()
2025-04-13 19:59:19,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:19,716:INFO:Checking exceptions
2025-04-13 19:59:19,716:INFO:Importing libraries
2025-04-13 19:59:19,716:INFO:Copying training dataset
2025-04-13 19:59:19,722:INFO:Defining folds
2025-04-13 19:59:19,722:INFO:Declaring metric variables
2025-04-13 19:59:19,723:INFO:Importing untrained model
2025-04-13 19:59:19,723:INFO:Random Forest Classifier Imported successfully
2025-04-13 19:59:19,724:INFO:Starting cross validation
2025-04-13 19:59:19,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:21,719:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,727:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,727:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,730:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,733:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,733:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,734:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,738:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,742:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,743:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,744:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,751:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,772:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,779:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,785:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,787:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,794:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,797:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,800:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,804:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,809:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,858:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,864:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,869:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,886:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,892:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,896:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,928:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,932:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,936:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:21,947:INFO:Calculating mean and std
2025-04-13 19:59:21,947:INFO:Creating metrics dataframe
2025-04-13 19:59:21,949:INFO:Uploading results into container
2025-04-13 19:59:21,949:INFO:Uploading model into container now
2025-04-13 19:59:21,950:INFO:_master_model_container: 7
2025-04-13 19:59:21,950:INFO:_display_container: 2
2025-04-13 19:59:21,950:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-13 19:59:21,950:INFO:create_model() successfully completed......................................
2025-04-13 19:59:22,064:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:22,064:INFO:Creating metrics dataframe
2025-04-13 19:59:22,066:INFO:Initializing Quadratic Discriminant Analysis
2025-04-13 19:59:22,066:INFO:Total runtime is 0.42980959018071496 minutes
2025-04-13 19:59:22,066:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:22,066:INFO:Initializing create_model()
2025-04-13 19:59:22,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:22,066:INFO:Checking exceptions
2025-04-13 19:59:22,066:INFO:Importing libraries
2025-04-13 19:59:22,066:INFO:Copying training dataset
2025-04-13 19:59:22,071:INFO:Defining folds
2025-04-13 19:59:22,071:INFO:Declaring metric variables
2025-04-13 19:59:22,071:INFO:Importing untrained model
2025-04-13 19:59:22,071:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-13 19:59:22,071:INFO:Starting cross validation
2025-04-13 19:59:22,074:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:23,443:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,447:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,455:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,494:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,501:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,531:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,544:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,684:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,686:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,694:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,695:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,704:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,704:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 19:59:23,730:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,731:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,738:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,738:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,740:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,748:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,748:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,749:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,753:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,755:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,758:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,758:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,763:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,765:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,795:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,800:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,803:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,827:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,831:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,832:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,834:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,838:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,838:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,843:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,843:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,848:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:23,858:INFO:Calculating mean and std
2025-04-13 19:59:23,859:INFO:Creating metrics dataframe
2025-04-13 19:59:23,860:INFO:Uploading results into container
2025-04-13 19:59:23,860:INFO:Uploading model into container now
2025-04-13 19:59:23,861:INFO:_master_model_container: 8
2025-04-13 19:59:23,861:INFO:_display_container: 2
2025-04-13 19:59:23,861:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-13 19:59:23,862:INFO:create_model() successfully completed......................................
2025-04-13 19:59:23,997:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:23,997:INFO:Creating metrics dataframe
2025-04-13 19:59:23,998:INFO:Initializing Ada Boost Classifier
2025-04-13 19:59:23,998:INFO:Total runtime is 0.46201383272806806 minutes
2025-04-13 19:59:24,000:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:24,000:INFO:Initializing create_model()
2025-04-13 19:59:24,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:24,000:INFO:Checking exceptions
2025-04-13 19:59:24,000:INFO:Importing libraries
2025-04-13 19:59:24,000:INFO:Copying training dataset
2025-04-13 19:59:24,003:INFO:Defining folds
2025-04-13 19:59:24,003:INFO:Declaring metric variables
2025-04-13 19:59:24,003:INFO:Importing untrained model
2025-04-13 19:59:24,004:INFO:Ada Boost Classifier Imported successfully
2025-04-13 19:59:24,004:INFO:Starting cross validation
2025-04-13 19:59:24,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 19:59:25,269:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,290:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,306:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,322:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,365:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,406:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,407:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,422:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,436:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:25,445:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 19:59:26,666:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,671:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,673:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,676:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,677:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,678:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,683:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,684:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,688:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,688:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,690:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,694:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,696:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,698:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,702:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,705:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,709:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,709:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,713:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,713:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,716:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,720:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,724:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,726:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,727:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,729:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,731:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,737:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,740:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,743:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 19:59:26,755:INFO:Calculating mean and std
2025-04-13 19:59:26,756:INFO:Creating metrics dataframe
2025-04-13 19:59:26,757:INFO:Uploading results into container
2025-04-13 19:59:26,758:INFO:Uploading model into container now
2025-04-13 19:59:26,758:INFO:_master_model_container: 9
2025-04-13 19:59:26,758:INFO:_display_container: 2
2025-04-13 19:59:26,758:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-04-13 19:59:26,758:INFO:create_model() successfully completed......................................
2025-04-13 19:59:26,871:INFO:SubProcess create_model() end ==================================
2025-04-13 19:59:26,872:INFO:Creating metrics dataframe
2025-04-13 19:59:26,874:INFO:Initializing Gradient Boosting Classifier
2025-04-13 19:59:26,874:INFO:Total runtime is 0.5099337259928386 minutes
2025-04-13 19:59:26,874:INFO:SubProcess create_model() called ==================================
2025-04-13 19:59:26,874:INFO:Initializing create_model()
2025-04-13 19:59:26,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E1A3259B90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1A4968250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 19:59:26,874:INFO:Checking exceptions
2025-04-13 19:59:26,874:INFO:Importing libraries
2025-04-13 19:59:26,874:INFO:Copying training dataset
2025-04-13 19:59:26,878:INFO:Defining folds
2025-04-13 19:59:26,878:INFO:Declaring metric variables
2025-04-13 19:59:26,878:INFO:Importing untrained model
2025-04-13 19:59:26,878:INFO:Gradient Boosting Classifier Imported successfully
2025-04-13 19:59:26,878:INFO:Starting cross validation
2025-04-13 19:59:26,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:02,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:00:02,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:00:02,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:00:02,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:00:02,934:INFO:PyCaret ClassificationExperiment
2025-04-13 20:00:02,934:INFO:Logging name: clf-default-name
2025-04-13 20:00:02,934:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-13 20:00:02,934:INFO:version 3.3.2
2025-04-13 20:00:02,934:INFO:Initializing setup()
2025-04-13 20:00:02,934:INFO:self.USI: f990
2025-04-13 20:00:02,934:INFO:self._variable_keys: {'X_train', 'fold_shuffle_param', 'logging_param', '_available_plots', 'idx', 'is_multiclass', 'log_plots_param', 'X_test', 'html_param', 'seed', 'gpu_param', 'X', 'target_param', 'y_test', 'USI', 'memory', 'fold_generator', 'exp_id', '_ml_usecase', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', 'y', 'y_train', 'n_jobs_param', 'data', 'pipeline', 'fix_imbalance'}
2025-04-13 20:00:02,934:INFO:Checking environment
2025-04-13 20:00:02,934:INFO:python_version: 3.11.6
2025-04-13 20:00:02,934:INFO:python_build: ('tags/v3.11.6:8b6ee5b', 'Oct  2 2023 14:57:12')
2025-04-13 20:00:02,935:INFO:machine: AMD64
2025-04-13 20:00:02,947:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-13 20:00:02,951:INFO:Memory: svmem(total=7897944064, available=1668136960, percent=78.9, used=6229807104, free=1668136960)
2025-04-13 20:00:02,951:INFO:Physical Core: 6
2025-04-13 20:00:02,951:INFO:Logical Core: 12
2025-04-13 20:00:02,951:INFO:Checking libraries
2025-04-13 20:00:02,951:INFO:System:
2025-04-13 20:00:02,951:INFO:    python: 3.11.6 (tags/v3.11.6:8b6ee5b, Oct  2 2023, 14:57:12) [MSC v.1935 64 bit (AMD64)]
2025-04-13 20:00:02,951:INFO:executable: C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Scripts\python.exe
2025-04-13 20:00:02,951:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-13 20:00:02,951:INFO:PyCaret required dependencies:
2025-04-13 20:00:02,974:INFO:                 pip: 23.2.1
2025-04-13 20:00:02,974:INFO:          setuptools: 65.5.0
2025-04-13 20:00:02,974:INFO:             pycaret: 3.3.2
2025-04-13 20:00:02,974:INFO:             IPython: 9.0.2
2025-04-13 20:00:02,974:INFO:          ipywidgets: 8.1.5
2025-04-13 20:00:02,974:INFO:                tqdm: 4.67.1
2025-04-13 20:00:02,974:INFO:               numpy: 1.26.4
2025-04-13 20:00:02,974:INFO:              pandas: 2.1.4
2025-04-13 20:00:02,974:INFO:              jinja2: 3.1.6
2025-04-13 20:00:02,974:INFO:               scipy: 1.11.4
2025-04-13 20:00:02,974:INFO:              joblib: 1.3.2
2025-04-13 20:00:02,974:INFO:             sklearn: 1.4.2
2025-04-13 20:00:02,974:INFO:                pyod: 2.0.4
2025-04-13 20:00:02,974:INFO:            imblearn: 0.13.0
2025-04-13 20:00:02,974:INFO:   category_encoders: 2.7.0
2025-04-13 20:00:02,974:INFO:            lightgbm: 4.6.0
2025-04-13 20:00:02,974:INFO:               numba: 0.61.0
2025-04-13 20:00:02,974:INFO:            requests: 2.32.3
2025-04-13 20:00:02,974:INFO:          matplotlib: 3.7.5
2025-04-13 20:00:02,974:INFO:          scikitplot: 0.3.7
2025-04-13 20:00:02,974:INFO:         yellowbrick: 1.5
2025-04-13 20:00:02,974:INFO:              plotly: 5.24.1
2025-04-13 20:00:02,974:INFO:    plotly-resampler: Not installed
2025-04-13 20:00:02,974:INFO:             kaleido: 0.2.1
2025-04-13 20:00:02,974:INFO:           schemdraw: 0.15
2025-04-13 20:00:02,974:INFO:         statsmodels: 0.14.4
2025-04-13 20:00:02,974:INFO:              sktime: 0.26.0
2025-04-13 20:00:02,974:INFO:               tbats: 1.1.3
2025-04-13 20:00:02,974:INFO:            pmdarima: 2.0.4
2025-04-13 20:00:02,974:INFO:              psutil: 7.0.0
2025-04-13 20:00:02,975:INFO:          markupsafe: 3.0.2
2025-04-13 20:00:02,975:INFO:             pickle5: Not installed
2025-04-13 20:00:02,975:INFO:         cloudpickle: 3.1.1
2025-04-13 20:00:02,975:INFO:         deprecation: 2.1.0
2025-04-13 20:00:02,975:INFO:              xxhash: 3.5.0
2025-04-13 20:00:02,975:INFO:           wurlitzer: Not installed
2025-04-13 20:00:02,975:INFO:PyCaret optional dependencies:
2025-04-13 20:00:02,988:INFO:                shap: Not installed
2025-04-13 20:00:02,988:INFO:           interpret: Not installed
2025-04-13 20:00:02,988:INFO:                umap: Not installed
2025-04-13 20:00:02,988:INFO:     ydata_profiling: 4.16.1
2025-04-13 20:00:02,988:INFO:  explainerdashboard: Not installed
2025-04-13 20:00:02,988:INFO:             autoviz: Not installed
2025-04-13 20:00:02,988:INFO:           fairlearn: Not installed
2025-04-13 20:00:02,988:INFO:          deepchecks: Not installed
2025-04-13 20:00:02,988:INFO:             xgboost: Not installed
2025-04-13 20:00:02,988:INFO:            catboost: Not installed
2025-04-13 20:00:02,988:INFO:              kmodes: Not installed
2025-04-13 20:00:02,988:INFO:             mlxtend: Not installed
2025-04-13 20:00:02,988:INFO:       statsforecast: Not installed
2025-04-13 20:00:02,988:INFO:        tune_sklearn: Not installed
2025-04-13 20:00:02,988:INFO:                 ray: Not installed
2025-04-13 20:00:02,988:INFO:            hyperopt: Not installed
2025-04-13 20:00:02,988:INFO:              optuna: Not installed
2025-04-13 20:00:02,988:INFO:               skopt: Not installed
2025-04-13 20:00:02,988:INFO:              mlflow: Not installed
2025-04-13 20:00:02,988:INFO:              gradio: Not installed
2025-04-13 20:00:02,988:INFO:             fastapi: Not installed
2025-04-13 20:00:02,989:INFO:             uvicorn: Not installed
2025-04-13 20:00:02,989:INFO:              m2cgen: Not installed
2025-04-13 20:00:02,989:INFO:           evidently: Not installed
2025-04-13 20:00:02,989:INFO:               fugue: Not installed
2025-04-13 20:00:02,989:INFO:           streamlit: Not installed
2025-04-13 20:00:02,989:INFO:             prophet: Not installed
2025-04-13 20:00:02,989:INFO:None
2025-04-13 20:00:02,989:INFO:Set up data.
2025-04-13 20:00:03,007:INFO:Set up folding strategy.
2025-04-13 20:00:03,008:INFO:Set up train/test split.
2025-04-13 20:00:03,019:INFO:Set up index.
2025-04-13 20:00:03,021:INFO:Assigning column types.
2025-04-13 20:00:03,023:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-13 20:00:03,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-13 20:00:03,065:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 20:00:03,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-13 20:00:03,135:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 20:00:03,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,159:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-13 20:00:03,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 20:00:03,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-13 20:00:03,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,286:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-13 20:00:03,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,408:INFO:Preparing preprocessing pipeline...
2025-04-13 20:00:03,411:INFO:Set up label encoding.
2025-04-13 20:00:03,411:INFO:Set up simple imputation.
2025-04-13 20:00:03,415:INFO:Set up encoding of ordinal features.
2025-04-13 20:00:03,420:INFO:Set up encoding of categorical features.
2025-04-13 20:00:03,420:INFO:Set up column name cleaning.
2025-04-13 20:00:03,716:INFO:Finished creating preprocessing pipeline.
2025-04-13 20:00:03,757:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\joaog\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-number',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'population',
                                                                    'habitat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-04-13 20:00:03,757:INFO:Creating final display dataframe.
2025-04-13 20:00:03,924:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type            Binary
3                Target mapping        e: 0, p: 1
4           Original data shape        (8124, 23)
5        Transformed data shape       (8124, 113)
6   Transformed train set shape       (5686, 113)
7    Transformed test set shape       (2438, 113)
8          Categorical features                22
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              f990
2025-04-13 20:00:03,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:03,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:04,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:04,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-13 20:00:04,041:INFO:setup() successfully completed in 1.11s...............
2025-04-13 20:00:04,041:INFO:Initializing compare_models()
2025-04-13 20:00:04,041:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-04-13 20:00:04,041:INFO:Checking exceptions
2025-04-13 20:00:04,044:INFO:Preparing display monitor
2025-04-13 20:00:04,046:INFO:Initializing Logistic Regression
2025-04-13 20:00:04,046:INFO:Total runtime is 0.0 minutes
2025-04-13 20:00:04,046:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:04,047:INFO:Initializing create_model()
2025-04-13 20:00:04,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:04,047:INFO:Checking exceptions
2025-04-13 20:00:04,047:INFO:Importing libraries
2025-04-13 20:00:04,047:INFO:Copying training dataset
2025-04-13 20:00:04,050:INFO:Defining folds
2025-04-13 20:00:04,050:INFO:Declaring metric variables
2025-04-13 20:00:04,051:INFO:Importing untrained model
2025-04-13 20:00:04,051:INFO:Logistic Regression Imported successfully
2025-04-13 20:00:04,051:INFO:Starting cross validation
2025-04-13 20:00:04,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:10,927:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,928:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,936:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,941:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,944:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,949:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,955:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,956:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,964:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,970:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,973:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,975:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,979:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,982:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,982:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,982:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,990:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,990:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,990:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:10,996:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,049:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,057:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,065:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,085:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,090:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,092:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,099:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,103:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,124:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:11,151:INFO:Calculating mean and std
2025-04-13 20:00:11,157:INFO:Creating metrics dataframe
2025-04-13 20:00:11,162:INFO:Uploading results into container
2025-04-13 20:00:11,188:INFO:Uploading model into container now
2025-04-13 20:00:11,189:INFO:_master_model_container: 1
2025-04-13 20:00:11,189:INFO:_display_container: 2
2025-04-13 20:00:11,189:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-13 20:00:11,189:INFO:create_model() successfully completed......................................
2025-04-13 20:00:11,405:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:11,405:INFO:Creating metrics dataframe
2025-04-13 20:00:11,407:INFO:Initializing K Neighbors Classifier
2025-04-13 20:00:11,408:INFO:Total runtime is 0.12269909381866455 minutes
2025-04-13 20:00:11,408:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:11,408:INFO:Initializing create_model()
2025-04-13 20:00:11,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:11,408:INFO:Checking exceptions
2025-04-13 20:00:11,408:INFO:Importing libraries
2025-04-13 20:00:11,408:INFO:Copying training dataset
2025-04-13 20:00:11,417:INFO:Defining folds
2025-04-13 20:00:11,417:INFO:Declaring metric variables
2025-04-13 20:00:11,417:INFO:Importing untrained model
2025-04-13 20:00:11,418:INFO:K Neighbors Classifier Imported successfully
2025-04-13 20:00:11,418:INFO:Starting cross validation
2025-04-13 20:00:11,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:13,405:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,411:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,412:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,420:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,422:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,434:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,463:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,520:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,555:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,600:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,607:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,615:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,616:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,624:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,633:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,849:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,857:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,865:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,879:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,883:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,900:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,911:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,912:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:13,918:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,440:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,446:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,449:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,452:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,453:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,457:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:17,467:INFO:Calculating mean and std
2025-04-13 20:00:17,468:INFO:Creating metrics dataframe
2025-04-13 20:00:17,471:INFO:Uploading results into container
2025-04-13 20:00:17,471:INFO:Uploading model into container now
2025-04-13 20:00:17,471:INFO:_master_model_container: 2
2025-04-13 20:00:17,471:INFO:_display_container: 2
2025-04-13 20:00:17,472:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-13 20:00:17,472:INFO:create_model() successfully completed......................................
2025-04-13 20:00:17,640:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:17,640:INFO:Creating metrics dataframe
2025-04-13 20:00:17,643:INFO:Initializing Naive Bayes
2025-04-13 20:00:17,643:INFO:Total runtime is 0.22660861015319822 minutes
2025-04-13 20:00:17,643:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:17,644:INFO:Initializing create_model()
2025-04-13 20:00:17,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:17,644:INFO:Checking exceptions
2025-04-13 20:00:17,644:INFO:Importing libraries
2025-04-13 20:00:17,644:INFO:Copying training dataset
2025-04-13 20:00:17,650:INFO:Defining folds
2025-04-13 20:00:17,650:INFO:Declaring metric variables
2025-04-13 20:00:17,650:INFO:Importing untrained model
2025-04-13 20:00:17,650:INFO:Naive Bayes Imported successfully
2025-04-13 20:00:17,650:INFO:Starting cross validation
2025-04-13 20:00:17,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:19,159:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,163:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,174:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,178:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,179:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,188:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,193:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,195:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,200:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,202:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,229:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,258:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,338:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,352:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,356:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,369:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,370:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,384:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,522:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,531:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,543:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,582:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,589:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,590:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,592:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,598:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,600:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,602:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,606:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,608:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:19,630:INFO:Calculating mean and std
2025-04-13 20:00:19,630:INFO:Creating metrics dataframe
2025-04-13 20:00:19,634:INFO:Uploading results into container
2025-04-13 20:00:19,635:INFO:Uploading model into container now
2025-04-13 20:00:19,636:INFO:_master_model_container: 3
2025-04-13 20:00:19,636:INFO:_display_container: 2
2025-04-13 20:00:19,637:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-04-13 20:00:19,637:INFO:create_model() successfully completed......................................
2025-04-13 20:00:19,896:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:19,896:INFO:Creating metrics dataframe
2025-04-13 20:00:19,901:INFO:Initializing Decision Tree Classifier
2025-04-13 20:00:19,901:INFO:Total runtime is 0.26424189805984494 minutes
2025-04-13 20:00:19,901:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:19,902:INFO:Initializing create_model()
2025-04-13 20:00:19,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:19,902:INFO:Checking exceptions
2025-04-13 20:00:19,902:INFO:Importing libraries
2025-04-13 20:00:19,902:INFO:Copying training dataset
2025-04-13 20:00:19,909:INFO:Defining folds
2025-04-13 20:00:19,909:INFO:Declaring metric variables
2025-04-13 20:00:19,909:INFO:Importing untrained model
2025-04-13 20:00:19,909:INFO:Decision Tree Classifier Imported successfully
2025-04-13 20:00:19,910:INFO:Starting cross validation
2025-04-13 20:00:19,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:21,414:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,419:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,419:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,421:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,426:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,426:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,427:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,428:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,431:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,431:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,435:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,437:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,438:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,440:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,441:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,449:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,449:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,456:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,485:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,492:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,497:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,508:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,514:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,519:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,539:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,544:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,547:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,558:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,563:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,567:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:21,580:INFO:Calculating mean and std
2025-04-13 20:00:21,580:INFO:Creating metrics dataframe
2025-04-13 20:00:21,582:INFO:Uploading results into container
2025-04-13 20:00:21,582:INFO:Uploading model into container now
2025-04-13 20:00:21,582:INFO:_master_model_container: 4
2025-04-13 20:00:21,582:INFO:_display_container: 2
2025-04-13 20:00:21,583:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-04-13 20:00:21,583:INFO:create_model() successfully completed......................................
2025-04-13 20:00:21,733:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:21,733:INFO:Creating metrics dataframe
2025-04-13 20:00:21,734:INFO:Initializing SVM - Linear Kernel
2025-04-13 20:00:21,735:INFO:Total runtime is 0.29481811523437496 minutes
2025-04-13 20:00:21,735:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:21,735:INFO:Initializing create_model()
2025-04-13 20:00:21,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:21,735:INFO:Checking exceptions
2025-04-13 20:00:21,735:INFO:Importing libraries
2025-04-13 20:00:21,735:INFO:Copying training dataset
2025-04-13 20:00:21,741:INFO:Defining folds
2025-04-13 20:00:21,741:INFO:Declaring metric variables
2025-04-13 20:00:21,741:INFO:Importing untrained model
2025-04-13 20:00:21,741:INFO:SVM - Linear Kernel Imported successfully
2025-04-13 20:00:21,741:INFO:Starting cross validation
2025-04-13 20:00:21,747:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:23,351:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,373:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,407:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,436:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,437:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,442:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,444:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,446:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,447:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,450:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,450:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,453:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,453:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,455:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,458:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,460:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,461:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,465:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,465:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,472:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,472:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,475:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,480:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,506:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,512:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,520:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,554:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,558:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,562:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:23,572:INFO:Calculating mean and std
2025-04-13 20:00:23,573:INFO:Creating metrics dataframe
2025-04-13 20:00:23,575:INFO:Uploading results into container
2025-04-13 20:00:23,575:INFO:Uploading model into container now
2025-04-13 20:00:23,575:INFO:_master_model_container: 5
2025-04-13 20:00:23,575:INFO:_display_container: 2
2025-04-13 20:00:23,576:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-04-13 20:00:23,576:INFO:create_model() successfully completed......................................
2025-04-13 20:00:23,734:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:23,734:INFO:Creating metrics dataframe
2025-04-13 20:00:23,737:INFO:Initializing Ridge Classifier
2025-04-13 20:00:23,738:INFO:Total runtime is 0.32820007801055906 minutes
2025-04-13 20:00:23,738:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:23,738:INFO:Initializing create_model()
2025-04-13 20:00:23,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:23,738:INFO:Checking exceptions
2025-04-13 20:00:23,738:INFO:Importing libraries
2025-04-13 20:00:23,738:INFO:Copying training dataset
2025-04-13 20:00:23,745:INFO:Defining folds
2025-04-13 20:00:23,745:INFO:Declaring metric variables
2025-04-13 20:00:23,746:INFO:Importing untrained model
2025-04-13 20:00:23,746:INFO:Ridge Classifier Imported successfully
2025-04-13 20:00:23,746:INFO:Starting cross validation
2025-04-13 20:00:23,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:25,211:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,218:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,226:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,235:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,243:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,245:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,250:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,252:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,257:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,258:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,259:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,262:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,264:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,266:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,268:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,269:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,270:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,273:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,275:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,277:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,284:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,300:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,302:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,305:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,305:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,309:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,309:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,310:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,313:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,313:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:25,333:INFO:Calculating mean and std
2025-04-13 20:00:25,334:INFO:Creating metrics dataframe
2025-04-13 20:00:25,336:INFO:Uploading results into container
2025-04-13 20:00:25,336:INFO:Uploading model into container now
2025-04-13 20:00:25,336:INFO:_master_model_container: 6
2025-04-13 20:00:25,336:INFO:_display_container: 2
2025-04-13 20:00:25,337:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-04-13 20:00:25,337:INFO:create_model() successfully completed......................................
2025-04-13 20:00:25,482:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:25,482:INFO:Creating metrics dataframe
2025-04-13 20:00:25,484:INFO:Initializing Random Forest Classifier
2025-04-13 20:00:25,485:INFO:Total runtime is 0.3573158303896586 minutes
2025-04-13 20:00:25,485:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:25,485:INFO:Initializing create_model()
2025-04-13 20:00:25,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:25,485:INFO:Checking exceptions
2025-04-13 20:00:25,485:INFO:Importing libraries
2025-04-13 20:00:25,485:INFO:Copying training dataset
2025-04-13 20:00:25,490:INFO:Defining folds
2025-04-13 20:00:25,490:INFO:Declaring metric variables
2025-04-13 20:00:25,490:INFO:Importing untrained model
2025-04-13 20:00:25,491:INFO:Random Forest Classifier Imported successfully
2025-04-13 20:00:25,491:INFO:Starting cross validation
2025-04-13 20:00:25,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:27,718:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,720:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,725:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,729:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,735:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,735:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,739:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,745:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,755:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,761:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,764:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,770:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,771:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,777:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,779:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,822:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,830:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,837:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,838:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,839:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,839:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,842:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,844:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,846:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,846:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,848:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,851:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,854:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:27,869:INFO:Calculating mean and std
2025-04-13 20:00:27,870:INFO:Creating metrics dataframe
2025-04-13 20:00:27,872:INFO:Uploading results into container
2025-04-13 20:00:27,872:INFO:Uploading model into container now
2025-04-13 20:00:27,873:INFO:_master_model_container: 7
2025-04-13 20:00:27,873:INFO:_display_container: 2
2025-04-13 20:00:27,873:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-04-13 20:00:27,873:INFO:create_model() successfully completed......................................
2025-04-13 20:00:28,038:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:28,038:INFO:Creating metrics dataframe
2025-04-13 20:00:28,040:INFO:Initializing Quadratic Discriminant Analysis
2025-04-13 20:00:28,041:INFO:Total runtime is 0.3999083002408345 minutes
2025-04-13 20:00:28,041:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:28,041:INFO:Initializing create_model()
2025-04-13 20:00:28,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:28,041:INFO:Checking exceptions
2025-04-13 20:00:28,041:INFO:Importing libraries
2025-04-13 20:00:28,041:INFO:Copying training dataset
2025-04-13 20:00:28,045:INFO:Defining folds
2025-04-13 20:00:28,046:INFO:Declaring metric variables
2025-04-13 20:00:28,046:INFO:Importing untrained model
2025-04-13 20:00:28,046:INFO:Quadratic Discriminant Analysis Imported successfully
2025-04-13 20:00:28,046:INFO:Starting cross validation
2025-04-13 20:00:28,050:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:29,437:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,606:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,635:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,659:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,666:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,745:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,749:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,808:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,813:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,824:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,835:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,843:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,870:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,880:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,887:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,909:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,912:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,918:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,919:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,925:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,926:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,927:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-04-13 20:00:29,927:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,935:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,941:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,945:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,947:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,953:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,953:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,959:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,982:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,988:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,991:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,995:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:29,999:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:30,004:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:30,039:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:30,043:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:30,046:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:30,056:INFO:Calculating mean and std
2025-04-13 20:00:30,057:INFO:Creating metrics dataframe
2025-04-13 20:00:30,058:INFO:Uploading results into container
2025-04-13 20:00:30,059:INFO:Uploading model into container now
2025-04-13 20:00:30,059:INFO:_master_model_container: 8
2025-04-13 20:00:30,059:INFO:_display_container: 2
2025-04-13 20:00:30,059:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-04-13 20:00:30,059:INFO:create_model() successfully completed......................................
2025-04-13 20:00:30,267:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:30,268:INFO:Creating metrics dataframe
2025-04-13 20:00:30,270:INFO:Initializing Ada Boost Classifier
2025-04-13 20:00:30,270:INFO:Total runtime is 0.4370664040247599 minutes
2025-04-13 20:00:30,270:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:30,270:INFO:Initializing create_model()
2025-04-13 20:00:30,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:30,270:INFO:Checking exceptions
2025-04-13 20:00:30,270:INFO:Importing libraries
2025-04-13 20:00:30,270:INFO:Copying training dataset
2025-04-13 20:00:30,276:INFO:Defining folds
2025-04-13 20:00:30,276:INFO:Declaring metric variables
2025-04-13 20:00:30,276:INFO:Importing untrained model
2025-04-13 20:00:30,276:INFO:Ada Boost Classifier Imported successfully
2025-04-13 20:00:30,277:INFO:Starting cross validation
2025-04-13 20:00:30,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:31,548:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,568:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,759:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,802:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,860:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,908:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,929:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,937:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,939:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:31,966:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-04-13 20:00:33,269:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,277:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,286:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,288:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,297:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,308:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,337:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,347:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,355:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,405:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,413:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,420:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,429:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,438:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,444:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,457:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,458:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,458:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,463:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,463:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,469:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,470:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,475:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,482:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,488:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,505:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,508:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,511:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:33,529:INFO:Calculating mean and std
2025-04-13 20:00:33,530:INFO:Creating metrics dataframe
2025-04-13 20:00:33,531:INFO:Uploading results into container
2025-04-13 20:00:33,533:INFO:Uploading model into container now
2025-04-13 20:00:33,533:INFO:_master_model_container: 9
2025-04-13 20:00:33,533:INFO:_display_container: 2
2025-04-13 20:00:33,533:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-04-13 20:00:33,533:INFO:create_model() successfully completed......................................
2025-04-13 20:00:33,695:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:33,695:INFO:Creating metrics dataframe
2025-04-13 20:00:33,697:INFO:Initializing Gradient Boosting Classifier
2025-04-13 20:00:33,697:INFO:Total runtime is 0.4941845615704854 minutes
2025-04-13 20:00:33,697:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:33,697:INFO:Initializing create_model()
2025-04-13 20:00:33,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:33,697:INFO:Checking exceptions
2025-04-13 20:00:33,698:INFO:Importing libraries
2025-04-13 20:00:33,698:INFO:Copying training dataset
2025-04-13 20:00:33,704:INFO:Defining folds
2025-04-13 20:00:33,704:INFO:Declaring metric variables
2025-04-13 20:00:33,704:INFO:Importing untrained model
2025-04-13 20:00:33,705:INFO:Gradient Boosting Classifier Imported successfully
2025-04-13 20:00:33,705:INFO:Starting cross validation
2025-04-13 20:00:33,708:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:36,933:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,942:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,947:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,950:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,955:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,962:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,975:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,975:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,982:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,983:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,988:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:36,989:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,034:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,040:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,047:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,100:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,107:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,109:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,114:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,115:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,122:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,133:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,138:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,140:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,143:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,145:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,148:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,205:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,209:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,212:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:37,225:INFO:Calculating mean and std
2025-04-13 20:00:37,226:INFO:Creating metrics dataframe
2025-04-13 20:00:37,228:INFO:Uploading results into container
2025-04-13 20:00:37,229:INFO:Uploading model into container now
2025-04-13 20:00:37,229:INFO:_master_model_container: 10
2025-04-13 20:00:37,229:INFO:_display_container: 2
2025-04-13 20:00:37,230:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-04-13 20:00:37,230:INFO:create_model() successfully completed......................................
2025-04-13 20:00:37,396:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:37,396:INFO:Creating metrics dataframe
2025-04-13 20:00:37,399:INFO:Initializing Linear Discriminant Analysis
2025-04-13 20:00:37,399:INFO:Total runtime is 0.5558786471684773 minutes
2025-04-13 20:00:37,399:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:37,399:INFO:Initializing create_model()
2025-04-13 20:00:37,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:37,399:INFO:Checking exceptions
2025-04-13 20:00:37,399:INFO:Importing libraries
2025-04-13 20:00:37,399:INFO:Copying training dataset
2025-04-13 20:00:37,405:INFO:Defining folds
2025-04-13 20:00:37,405:INFO:Declaring metric variables
2025-04-13 20:00:37,406:INFO:Importing untrained model
2025-04-13 20:00:37,406:INFO:Linear Discriminant Analysis Imported successfully
2025-04-13 20:00:37,406:INFO:Starting cross validation
2025-04-13 20:00:37,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:39,547:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,554:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,556:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,563:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,565:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,572:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,613:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,616:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,617:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,618:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,620:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,625:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,625:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,626:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,632:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,632:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,633:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,633:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,640:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,647:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,656:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,663:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,670:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,677:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,682:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,684:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,688:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,690:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,695:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:39,708:INFO:Calculating mean and std
2025-04-13 20:00:39,709:INFO:Creating metrics dataframe
2025-04-13 20:00:39,712:INFO:Uploading results into container
2025-04-13 20:00:39,713:INFO:Uploading model into container now
2025-04-13 20:00:39,713:INFO:_master_model_container: 11
2025-04-13 20:00:39,713:INFO:_display_container: 2
2025-04-13 20:00:39,714:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-04-13 20:00:39,714:INFO:create_model() successfully completed......................................
2025-04-13 20:00:39,877:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:39,877:INFO:Creating metrics dataframe
2025-04-13 20:00:39,880:INFO:Initializing Extra Trees Classifier
2025-04-13 20:00:39,880:INFO:Total runtime is 0.5972272396087647 minutes
2025-04-13 20:00:39,880:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:39,880:INFO:Initializing create_model()
2025-04-13 20:00:39,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:39,880:INFO:Checking exceptions
2025-04-13 20:00:39,880:INFO:Importing libraries
2025-04-13 20:00:39,880:INFO:Copying training dataset
2025-04-13 20:00:39,884:INFO:Defining folds
2025-04-13 20:00:39,885:INFO:Declaring metric variables
2025-04-13 20:00:39,885:INFO:Importing untrained model
2025-04-13 20:00:39,885:INFO:Extra Trees Classifier Imported successfully
2025-04-13 20:00:39,885:INFO:Starting cross validation
2025-04-13 20:00:39,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:41,930:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,939:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,939:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,948:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,950:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,950:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,953:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,957:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,958:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,963:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,966:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,974:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,989:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,997:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:41,997:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,004:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,004:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,012:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,034:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,042:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,049:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,060:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,062:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,063:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,067:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,068:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,069:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,073:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,075:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,076:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:42,086:INFO:Calculating mean and std
2025-04-13 20:00:42,087:INFO:Creating metrics dataframe
2025-04-13 20:00:42,089:INFO:Uploading results into container
2025-04-13 20:00:42,089:INFO:Uploading model into container now
2025-04-13 20:00:42,090:INFO:_master_model_container: 12
2025-04-13 20:00:42,090:INFO:_display_container: 2
2025-04-13 20:00:42,090:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-04-13 20:00:42,090:INFO:create_model() successfully completed......................................
2025-04-13 20:00:42,269:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:42,270:INFO:Creating metrics dataframe
2025-04-13 20:00:42,273:INFO:Initializing Light Gradient Boosting Machine
2025-04-13 20:00:42,273:INFO:Total runtime is 0.6371152520179749 minutes
2025-04-13 20:00:42,273:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:42,273:INFO:Initializing create_model()
2025-04-13 20:00:42,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:42,273:INFO:Checking exceptions
2025-04-13 20:00:42,273:INFO:Importing libraries
2025-04-13 20:00:42,273:INFO:Copying training dataset
2025-04-13 20:00:42,281:INFO:Defining folds
2025-04-13 20:00:42,281:INFO:Declaring metric variables
2025-04-13 20:00:42,281:INFO:Importing untrained model
2025-04-13 20:00:42,281:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-13 20:00:42,282:INFO:Starting cross validation
2025-04-13 20:00:42,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:45,968:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:45,978:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:45,988:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,221:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,235:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,249:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,290:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,301:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,310:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,342:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,352:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,372:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,592:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,609:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,622:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,660:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,666:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,669:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,676:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,678:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,683:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,756:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,763:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,770:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,831:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,839:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,852:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,936:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,942:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,949:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:46,965:INFO:Calculating mean and std
2025-04-13 20:00:46,966:INFO:Creating metrics dataframe
2025-04-13 20:00:46,968:INFO:Uploading results into container
2025-04-13 20:00:46,969:INFO:Uploading model into container now
2025-04-13 20:00:46,969:INFO:_master_model_container: 13
2025-04-13 20:00:46,969:INFO:_display_container: 2
2025-04-13 20:00:46,970:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-04-13 20:00:46,970:INFO:create_model() successfully completed......................................
2025-04-13 20:00:47,145:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:47,145:INFO:Creating metrics dataframe
2025-04-13 20:00:47,147:INFO:Initializing Dummy Classifier
2025-04-13 20:00:47,148:INFO:Total runtime is 0.7183549602826437 minutes
2025-04-13 20:00:47,148:INFO:SubProcess create_model() called ==================================
2025-04-13 20:00:47,148:INFO:Initializing create_model()
2025-04-13 20:00:47,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017C306B54D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:47,148:INFO:Checking exceptions
2025-04-13 20:00:47,148:INFO:Importing libraries
2025-04-13 20:00:47,148:INFO:Copying training dataset
2025-04-13 20:00:47,155:INFO:Defining folds
2025-04-13 20:00:47,155:INFO:Declaring metric variables
2025-04-13 20:00:47,155:INFO:Importing untrained model
2025-04-13 20:00:47,155:INFO:Dummy Classifier Imported successfully
2025-04-13 20:00:47,155:INFO:Starting cross validation
2025-04-13 20:00:47,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-13 20:00:48,571:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,575:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,584:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,584:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,587:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,590:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,590:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,596:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,634:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,646:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,650:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,655:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,663:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,670:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,672:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,673:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,677:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,678:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,678:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,681:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,685:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,685:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,690:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,692:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,697:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,704:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,707:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,710:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,724:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,731:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,734:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,737:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,737:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,743:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,746:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,747:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,748:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,752:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,754:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-04-13 20:00:48,757:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-04-13 20:00:48,771:INFO:Calculating mean and std
2025-04-13 20:00:48,771:INFO:Creating metrics dataframe
2025-04-13 20:00:48,773:INFO:Uploading results into container
2025-04-13 20:00:48,773:INFO:Uploading model into container now
2025-04-13 20:00:48,774:INFO:_master_model_container: 14
2025-04-13 20:00:48,774:INFO:_display_container: 2
2025-04-13 20:00:48,774:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-04-13 20:00:48,774:INFO:create_model() successfully completed......................................
2025-04-13 20:00:48,919:INFO:SubProcess create_model() end ==================================
2025-04-13 20:00:48,919:INFO:Creating metrics dataframe
2025-04-13 20:00:48,922:WARNING:C:\Users\joaog\Desktop\aula6-20250404T030146Z-001\aula6\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-04-13 20:00:48,923:INFO:Initializing create_model()
2025-04-13 20:00:48,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017C2E91F990>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-04-13 20:00:48,923:INFO:Checking exceptions
2025-04-13 20:00:48,924:INFO:Importing libraries
2025-04-13 20:00:48,924:INFO:Copying training dataset
2025-04-13 20:00:48,928:INFO:Defining folds
2025-04-13 20:00:48,928:INFO:Declaring metric variables
2025-04-13 20:00:48,929:INFO:Importing untrained model
2025-04-13 20:00:48,929:INFO:Declaring custom model
2025-04-13 20:00:48,929:INFO:K Neighbors Classifier Imported successfully
2025-04-13 20:00:48,933:INFO:Cross validation set to False
2025-04-13 20:00:48,933:INFO:Fitting Model
2025-04-13 20:00:49,344:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-13 20:00:49,344:INFO:create_model() successfully completed......................................
2025-04-13 20:00:49,468:INFO:_master_model_container: 14
2025-04-13 20:00:49,469:INFO:_display_container: 2
2025-04-13 20:00:49,469:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-04-13 20:00:49,469:INFO:compare_models() successfully completed......................................
2025-04-13 20:22:30,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:22:30,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:22:30,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:22:30,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-13 20:22:31,981:INFO:Initializing load_model()
2025-04-13 20:22:31,981:INFO:load_model(model_name=ridge_mushroom_model, platform=None, authentication=None, verbose=True)
